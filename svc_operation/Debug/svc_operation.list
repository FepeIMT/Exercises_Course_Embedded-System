
svc_operation.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001300  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000130  080014c0  080014c0  000114c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015f0  080015f0  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  080015f0  080015f0  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015f0  080015f0  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  080015f0  080015f0  000115f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  080015f8  080015f8  000115f8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  08001600  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000068  08001668  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000098  08001668  00020098  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002298  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000064a  00000000  00000000  00022330  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000140  00000000  00000000  00022980  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000108  00000000  00000000  00022ac0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a7a  00000000  00000000  00022bc8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001306  00000000  00000000  00025642  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090ee  00000000  00000000  00026948  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002fa36  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b54  00000000  00000000  0002fab4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000068 	.word	0x20000068
 80001dc:	00000000 	.word	0x00000000
 80001e0:	080014a8 	.word	0x080014a8

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	2000006c 	.word	0x2000006c
 80001fc:	080014a8 	.word	0x080014a8

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <add_numbers>:
int8_t SVC_Status = 0;

void SVC_Handler_c(uint32_t *pBaseStackFrame);

int32_t add_numbers(int32_t x, int32_t y)
{
 80002a0:	b480      	push	{r7}
 80002a2:	b085      	sub	sp, #20
 80002a4:	af00      	add	r7, sp, #0
 80002a6:	6078      	str	r0, [r7, #4]
 80002a8:	6039      	str	r1, [r7, #0]
	/*Variable to store the result of the add operation */
	int32_t res;

	/* Assign 36 like SVC number to add two numbers */
	__asm volatile("SVC #36");
 80002aa:	df24      	svc	36	; 0x24

	__asm volatile("MOV %0,R0": "=r"(res) ::);
 80002ac:	4603      	mov	r3, r0
 80002ae:	60fb      	str	r3, [r7, #12]

	return res;
 80002b0:	68fb      	ldr	r3, [r7, #12]

}
 80002b2:	4618      	mov	r0, r3
 80002b4:	3714      	adds	r7, #20
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr

080002be <sub_numbers>:

int32_t sub_numbers(int32_t x, int32_t y)
{
 80002be:	b480      	push	{r7}
 80002c0:	b085      	sub	sp, #20
 80002c2:	af00      	add	r7, sp, #0
 80002c4:	6078      	str	r0, [r7, #4]
 80002c6:	6039      	str	r1, [r7, #0]
	int32_t res;

	/* Assign 37 like SVC number to substract two numbers */

	__asm volatile("SVC #37");
 80002c8:	df25      	svc	37	; 0x25


	__asm volatile("MOV %0, R0": "=r"(res) ::);
 80002ca:	4603      	mov	r3, r0
 80002cc:	60fb      	str	r3, [r7, #12]

	return res;
 80002ce:	68fb      	ldr	r3, [r7, #12]
}
 80002d0:	4618      	mov	r0, r3
 80002d2:	3714      	adds	r7, #20
 80002d4:	46bd      	mov	sp, r7
 80002d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002da:	4770      	bx	lr

080002dc <mul_numbers>:

int32_t mul_numbers(int32_t x, int32_t y)
{
 80002dc:	b480      	push	{r7}
 80002de:	b085      	sub	sp, #20
 80002e0:	af00      	add	r7, sp, #0
 80002e2:	6078      	str	r0, [r7, #4]
 80002e4:	6039      	str	r1, [r7, #0]
	int32_t res;
	__asm volatile("SVC #38");
 80002e6:	df26      	svc	38	; 0x26

	__asm volatile("MOV %0, R0": "=r"(res)::);
 80002e8:	4603      	mov	r3, r0
 80002ea:	60fb      	str	r3, [r7, #12]

	return res;
 80002ec:	68fb      	ldr	r3, [r7, #12]
}
 80002ee:	4618      	mov	r0, r3
 80002f0:	3714      	adds	r7, #20
 80002f2:	46bd      	mov	sp, r7
 80002f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f8:	4770      	bx	lr

080002fa <div_numbers>:

int32_t div_numbers(int32_t x, int32_t y)
{
 80002fa:	b480      	push	{r7}
 80002fc:	b085      	sub	sp, #20
 80002fe:	af00      	add	r7, sp, #0
 8000300:	6078      	str	r0, [r7, #4]
 8000302:	6039      	str	r1, [r7, #0]
	int32_t res;

	__asm volatile("SVC #39");
 8000304:	df27      	svc	39	; 0x27

	__asm volatile("MOV %0, R0": "=r"(res)  ::);
 8000306:	4603      	mov	r3, r0
 8000308:	60fb      	str	r3, [r7, #12]

	return res;
 800030a:	68fb      	ldr	r3, [r7, #12]
}
 800030c:	4618      	mov	r0, r3
 800030e:	3714      	adds	r7, #20
 8000310:	46bd      	mov	sp, r7
 8000312:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000316:	4770      	bx	lr

08000318 <main>:


int main(void)
{
 8000318:	b580      	push	{r7, lr}
 800031a:	b082      	sub	sp, #8
 800031c:	af00      	add	r7, sp, #0
	int32_t res;

	res = add_numbers(40, -90);
 800031e:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8000322:	2028      	movs	r0, #40	; 0x28
 8000324:	f7ff ffbc 	bl	80002a0 <add_numbers>
 8000328:	6078      	str	r0, [r7, #4]
	printf("The result of Add is %ld", res);
 800032a:	6879      	ldr	r1, [r7, #4]
 800032c:	4810      	ldr	r0, [pc, #64]	; (8000370 <main+0x58>)
 800032e:	f000 f973 	bl	8000618 <iprintf>

	res = sub_numbers(40, -90);
 8000332:	f06f 0159 	mvn.w	r1, #89	; 0x59
 8000336:	2028      	movs	r0, #40	; 0x28
 8000338:	f7ff ffc1 	bl	80002be <sub_numbers>
 800033c:	6078      	str	r0, [r7, #4]
	printf("The result of Substraction is %ld", res);
 800033e:	6879      	ldr	r1, [r7, #4]
 8000340:	480c      	ldr	r0, [pc, #48]	; (8000374 <main+0x5c>)
 8000342:	f000 f969 	bl	8000618 <iprintf>


	res = mul_numbers(40, -90);
 8000346:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800034a:	2028      	movs	r0, #40	; 0x28
 800034c:	f7ff ffc6 	bl	80002dc <mul_numbers>
 8000350:	6078      	str	r0, [r7, #4]
	printf("The result of Multiplication is %ld", res);
 8000352:	6879      	ldr	r1, [r7, #4]
 8000354:	4808      	ldr	r0, [pc, #32]	; (8000378 <main+0x60>)
 8000356:	f000 f95f 	bl	8000618 <iprintf>

	res = div_numbers(40, -90);
 800035a:	f06f 0159 	mvn.w	r1, #89	; 0x59
 800035e:	2028      	movs	r0, #40	; 0x28
 8000360:	f7ff ffcb 	bl	80002fa <div_numbers>
 8000364:	6078      	str	r0, [r7, #4]
	printf("The result of division is %ld", res);
 8000366:	6879      	ldr	r1, [r7, #4]
 8000368:	4804      	ldr	r0, [pc, #16]	; (800037c <main+0x64>)
 800036a:	f000 f955 	bl	8000618 <iprintf>



	for(;;);
 800036e:	e7fe      	b.n	800036e <main+0x56>
 8000370:	080014c0 	.word	0x080014c0
 8000374:	080014dc 	.word	0x080014dc
 8000378:	08001500 	.word	0x08001500
 800037c:	08001524 	.word	0x08001524

08000380 <SVC_Handler>:
}


__attribute__( (naked) ) void SVC_Handler(void)
{
	__asm ("MRS r0, MSP");
 8000380:	f3ef 8008 	mrs	r0, MSP
	__asm ("B SVC_Handler_c");
 8000384:	f000 b802 	b.w	800038c <SVC_Handler_c>
}
 8000388:	bf00      	nop
	...

0800038c <SVC_Handler_c>:

void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
 800038c:	b580      	push	{r7, lr}
 800038e:	b088      	sub	sp, #32
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
	SVC_Status = 1;
 8000394:	4b23      	ldr	r3, [pc, #140]	; (8000424 <SVC_Handler_c+0x98>)
 8000396:	2201      	movs	r2, #1
 8000398:	701a      	strb	r2, [r3, #0]

	int32_t arg0, arg1, res;

	uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	3318      	adds	r3, #24
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	61bb      	str	r3, [r7, #24]

	pReturn_addr -= 2;
 80003a2:	69bb      	ldr	r3, [r7, #24]
 80003a4:	3b02      	subs	r3, #2
 80003a6:	61bb      	str	r3, [r7, #24]

	uint8_t svc_number = *pReturn_addr;
 80003a8:	69bb      	ldr	r3, [r7, #24]
 80003aa:	781b      	ldrb	r3, [r3, #0]
 80003ac:	75fb      	strb	r3, [r7, #23]

	arg0 = pBaseOfStackFrame[0];
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	613b      	str	r3, [r7, #16]
	arg1 = pBaseOfStackFrame[1];
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	3304      	adds	r3, #4
 80003b8:	681b      	ldr	r3, [r3, #0]
 80003ba:	60fb      	str	r3, [r7, #12]

	switch(svc_number)
 80003bc:	7dfb      	ldrb	r3, [r7, #23]
 80003be:	3b24      	subs	r3, #36	; 0x24
 80003c0:	2b03      	cmp	r3, #3
 80003c2:	d821      	bhi.n	8000408 <SVC_Handler_c+0x7c>
 80003c4:	a201      	add	r2, pc, #4	; (adr r2, 80003cc <SVC_Handler_c+0x40>)
 80003c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80003ca:	bf00      	nop
 80003cc:	080003dd 	.word	0x080003dd
 80003d0:	080003e7 	.word	0x080003e7
 80003d4:	080003f1 	.word	0x080003f1
 80003d8:	080003fd 	.word	0x080003fd
	{
	case 36:
		res = arg0 + arg1;
 80003dc:	693a      	ldr	r2, [r7, #16]
 80003de:	68fb      	ldr	r3, [r7, #12]
 80003e0:	4413      	add	r3, r2
 80003e2:	61fb      	str	r3, [r7, #28]
		break;
 80003e4:	e014      	b.n	8000410 <SVC_Handler_c+0x84>
	case 37:
		res = arg0 - arg1;
 80003e6:	693a      	ldr	r2, [r7, #16]
 80003e8:	68fb      	ldr	r3, [r7, #12]
 80003ea:	1ad3      	subs	r3, r2, r3
 80003ec:	61fb      	str	r3, [r7, #28]
		break;
 80003ee:	e00f      	b.n	8000410 <SVC_Handler_c+0x84>
	case 38:
		res = arg0 * arg1;
 80003f0:	693b      	ldr	r3, [r7, #16]
 80003f2:	68fa      	ldr	r2, [r7, #12]
 80003f4:	fb02 f303 	mul.w	r3, r2, r3
 80003f8:	61fb      	str	r3, [r7, #28]
		break;
 80003fa:	e009      	b.n	8000410 <SVC_Handler_c+0x84>
	case 39:
		res = arg0 / arg1;
 80003fc:	693a      	ldr	r2, [r7, #16]
 80003fe:	68fb      	ldr	r3, [r7, #12]
 8000400:	fb92 f3f3 	sdiv	r3, r2, r3
 8000404:	61fb      	str	r3, [r7, #28]
		break;
 8000406:	e003      	b.n	8000410 <SVC_Handler_c+0x84>
	default:
		printf("invalid svc code\n");
 8000408:	4807      	ldr	r0, [pc, #28]	; (8000428 <SVC_Handler_c+0x9c>)
 800040a:	f000 f979 	bl	8000700 <puts>
		break;
 800040e:	bf00      	nop
	}


	pBaseOfStackFrame[0] = res;
 8000410:	69fa      	ldr	r2, [r7, #28]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	601a      	str	r2, [r3, #0]

	SVC_Status = 0;
 8000416:	4b03      	ldr	r3, [pc, #12]	; (8000424 <SVC_Handler_c+0x98>)
 8000418:	2200      	movs	r2, #0
 800041a:	701a      	strb	r2, [r3, #0]

}
 800041c:	bf00      	nop
 800041e:	3720      	adds	r7, #32
 8000420:	46bd      	mov	sp, r7
 8000422:	bd80      	pop	{r7, pc}
 8000424:	20000084 	.word	0x20000084
 8000428:	08001544 	.word	0x08001544

0800042c <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800042c:	b580      	push	{r7, lr}
 800042e:	b086      	sub	sp, #24
 8000430:	af00      	add	r7, sp, #0
 8000432:	60f8      	str	r0, [r7, #12]
 8000434:	60b9      	str	r1, [r7, #8]
 8000436:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000438:	2300      	movs	r3, #0
 800043a:	617b      	str	r3, [r7, #20]
 800043c:	e00a      	b.n	8000454 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800043e:	f3af 8000 	nop.w
 8000442:	4601      	mov	r1, r0
 8000444:	68bb      	ldr	r3, [r7, #8]
 8000446:	1c5a      	adds	r2, r3, #1
 8000448:	60ba      	str	r2, [r7, #8]
 800044a:	b2ca      	uxtb	r2, r1
 800044c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800044e:	697b      	ldr	r3, [r7, #20]
 8000450:	3301      	adds	r3, #1
 8000452:	617b      	str	r3, [r7, #20]
 8000454:	697a      	ldr	r2, [r7, #20]
 8000456:	687b      	ldr	r3, [r7, #4]
 8000458:	429a      	cmp	r2, r3
 800045a:	dbf0      	blt.n	800043e <_read+0x12>
	}

return len;
 800045c:	687b      	ldr	r3, [r7, #4]
}
 800045e:	4618      	mov	r0, r3
 8000460:	3718      	adds	r7, #24
 8000462:	46bd      	mov	sp, r7
 8000464:	bd80      	pop	{r7, pc}

08000466 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000466:	b580      	push	{r7, lr}
 8000468:	b086      	sub	sp, #24
 800046a:	af00      	add	r7, sp, #0
 800046c:	60f8      	str	r0, [r7, #12]
 800046e:	60b9      	str	r1, [r7, #8]
 8000470:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000472:	2300      	movs	r3, #0
 8000474:	617b      	str	r3, [r7, #20]
 8000476:	e009      	b.n	800048c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000478:	68bb      	ldr	r3, [r7, #8]
 800047a:	1c5a      	adds	r2, r3, #1
 800047c:	60ba      	str	r2, [r7, #8]
 800047e:	781b      	ldrb	r3, [r3, #0]
 8000480:	4618      	mov	r0, r3
 8000482:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000486:	697b      	ldr	r3, [r7, #20]
 8000488:	3301      	adds	r3, #1
 800048a:	617b      	str	r3, [r7, #20]
 800048c:	697a      	ldr	r2, [r7, #20]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	429a      	cmp	r2, r3
 8000492:	dbf1      	blt.n	8000478 <_write+0x12>
	}
	return len;
 8000494:	687b      	ldr	r3, [r7, #4]
}
 8000496:	4618      	mov	r0, r3
 8000498:	3718      	adds	r7, #24
 800049a:	46bd      	mov	sp, r7
 800049c:	bd80      	pop	{r7, pc}

0800049e <_close>:

int _close(int file)
{
 800049e:	b480      	push	{r7}
 80004a0:	b083      	sub	sp, #12
 80004a2:	af00      	add	r7, sp, #0
 80004a4:	6078      	str	r0, [r7, #4]
	return -1;
 80004a6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80004aa:	4618      	mov	r0, r3
 80004ac:	370c      	adds	r7, #12
 80004ae:	46bd      	mov	sp, r7
 80004b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b4:	4770      	bx	lr

080004b6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004b6:	b480      	push	{r7}
 80004b8:	b083      	sub	sp, #12
 80004ba:	af00      	add	r7, sp, #0
 80004bc:	6078      	str	r0, [r7, #4]
 80004be:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80004c0:	683b      	ldr	r3, [r7, #0]
 80004c2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80004c6:	605a      	str	r2, [r3, #4]
	return 0;
 80004c8:	2300      	movs	r3, #0
}
 80004ca:	4618      	mov	r0, r3
 80004cc:	370c      	adds	r7, #12
 80004ce:	46bd      	mov	sp, r7
 80004d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d4:	4770      	bx	lr

080004d6 <_isatty>:

int _isatty(int file)
{
 80004d6:	b480      	push	{r7}
 80004d8:	b083      	sub	sp, #12
 80004da:	af00      	add	r7, sp, #0
 80004dc:	6078      	str	r0, [r7, #4]
	return 1;
 80004de:	2301      	movs	r3, #1
}
 80004e0:	4618      	mov	r0, r3
 80004e2:	370c      	adds	r7, #12
 80004e4:	46bd      	mov	sp, r7
 80004e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ea:	4770      	bx	lr

080004ec <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004ec:	b480      	push	{r7}
 80004ee:	b085      	sub	sp, #20
 80004f0:	af00      	add	r7, sp, #0
 80004f2:	60f8      	str	r0, [r7, #12]
 80004f4:	60b9      	str	r1, [r7, #8]
 80004f6:	607a      	str	r2, [r7, #4]
	return 0;
 80004f8:	2300      	movs	r3, #0
}
 80004fa:	4618      	mov	r0, r3
 80004fc:	3714      	adds	r7, #20
 80004fe:	46bd      	mov	sp, r7
 8000500:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000504:	4770      	bx	lr
	...

08000508 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8000508:	b580      	push	{r7, lr}
 800050a:	b084      	sub	sp, #16
 800050c:	af00      	add	r7, sp, #0
 800050e:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8000510:	4b11      	ldr	r3, [pc, #68]	; (8000558 <_sbrk+0x50>)
 8000512:	681b      	ldr	r3, [r3, #0]
 8000514:	2b00      	cmp	r3, #0
 8000516:	d102      	bne.n	800051e <_sbrk+0x16>
		heap_end = &end;
 8000518:	4b0f      	ldr	r3, [pc, #60]	; (8000558 <_sbrk+0x50>)
 800051a:	4a10      	ldr	r2, [pc, #64]	; (800055c <_sbrk+0x54>)
 800051c:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800051e:	4b0e      	ldr	r3, [pc, #56]	; (8000558 <_sbrk+0x50>)
 8000520:	681b      	ldr	r3, [r3, #0]
 8000522:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8000524:	4b0c      	ldr	r3, [pc, #48]	; (8000558 <_sbrk+0x50>)
 8000526:	681a      	ldr	r2, [r3, #0]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	4413      	add	r3, r2
 800052c:	466a      	mov	r2, sp
 800052e:	4293      	cmp	r3, r2
 8000530:	d907      	bls.n	8000542 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 8000532:	f000 f83f 	bl	80005b4 <__errno>
 8000536:	4602      	mov	r2, r0
 8000538:	230c      	movs	r3, #12
 800053a:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 800053c:	f04f 33ff 	mov.w	r3, #4294967295
 8000540:	e006      	b.n	8000550 <_sbrk+0x48>
	}

	heap_end += incr;
 8000542:	4b05      	ldr	r3, [pc, #20]	; (8000558 <_sbrk+0x50>)
 8000544:	681a      	ldr	r2, [r3, #0]
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	4413      	add	r3, r2
 800054a:	4a03      	ldr	r2, [pc, #12]	; (8000558 <_sbrk+0x50>)
 800054c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800054e:	68fb      	ldr	r3, [r7, #12]
}
 8000550:	4618      	mov	r0, r3
 8000552:	3710      	adds	r7, #16
 8000554:	46bd      	mov	sp, r7
 8000556:	bd80      	pop	{r7, pc}
 8000558:	20000088 	.word	0x20000088
 800055c:	20000098 	.word	0x20000098

08000560 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000560:	480d      	ldr	r0, [pc, #52]	; (8000598 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000562:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000564:	480d      	ldr	r0, [pc, #52]	; (800059c <LoopForever+0x6>)
  ldr r1, =_edata
 8000566:	490e      	ldr	r1, [pc, #56]	; (80005a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000568:	4a0e      	ldr	r2, [pc, #56]	; (80005a4 <LoopForever+0xe>)
  movs r3, #0
 800056a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800056c:	e002      	b.n	8000574 <LoopCopyDataInit>

0800056e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800056e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000570:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000572:	3304      	adds	r3, #4

08000574 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000574:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000576:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000578:	d3f9      	bcc.n	800056e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800057a:	4a0b      	ldr	r2, [pc, #44]	; (80005a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 800057c:	4c0b      	ldr	r4, [pc, #44]	; (80005ac <LoopForever+0x16>)
  movs r3, #0
 800057e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000580:	e001      	b.n	8000586 <LoopFillZerobss>

08000582 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000582:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000584:	3204      	adds	r2, #4

08000586 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000586:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000588:	d3fb      	bcc.n	8000582 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800058a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800058e:	f000 f817 	bl	80005c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000592:	f7ff fec1 	bl	8000318 <main>

08000596 <LoopForever>:

LoopForever:
    b LoopForever
 8000596:	e7fe      	b.n	8000596 <LoopForever>
  ldr   r0, =_estack
 8000598:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 800059c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80005a0:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 80005a4:	08001600 	.word	0x08001600
  ldr r2, =_sbss
 80005a8:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 80005ac:	20000098 	.word	0x20000098

080005b0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80005b0:	e7fe      	b.n	80005b0 <ADC1_2_IRQHandler>
	...

080005b4 <__errno>:
 80005b4:	4b01      	ldr	r3, [pc, #4]	; (80005bc <__errno+0x8>)
 80005b6:	6818      	ldr	r0, [r3, #0]
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	20000000 	.word	0x20000000

080005c0 <__libc_init_array>:
 80005c0:	b570      	push	{r4, r5, r6, lr}
 80005c2:	4e0d      	ldr	r6, [pc, #52]	; (80005f8 <__libc_init_array+0x38>)
 80005c4:	4c0d      	ldr	r4, [pc, #52]	; (80005fc <__libc_init_array+0x3c>)
 80005c6:	1ba4      	subs	r4, r4, r6
 80005c8:	10a4      	asrs	r4, r4, #2
 80005ca:	2500      	movs	r5, #0
 80005cc:	42a5      	cmp	r5, r4
 80005ce:	d109      	bne.n	80005e4 <__libc_init_array+0x24>
 80005d0:	4e0b      	ldr	r6, [pc, #44]	; (8000600 <__libc_init_array+0x40>)
 80005d2:	4c0c      	ldr	r4, [pc, #48]	; (8000604 <__libc_init_array+0x44>)
 80005d4:	f000 ff68 	bl	80014a8 <_init>
 80005d8:	1ba4      	subs	r4, r4, r6
 80005da:	10a4      	asrs	r4, r4, #2
 80005dc:	2500      	movs	r5, #0
 80005de:	42a5      	cmp	r5, r4
 80005e0:	d105      	bne.n	80005ee <__libc_init_array+0x2e>
 80005e2:	bd70      	pop	{r4, r5, r6, pc}
 80005e4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005e8:	4798      	blx	r3
 80005ea:	3501      	adds	r5, #1
 80005ec:	e7ee      	b.n	80005cc <__libc_init_array+0xc>
 80005ee:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80005f2:	4798      	blx	r3
 80005f4:	3501      	adds	r5, #1
 80005f6:	e7f2      	b.n	80005de <__libc_init_array+0x1e>
 80005f8:	080015f0 	.word	0x080015f0
 80005fc:	080015f0 	.word	0x080015f0
 8000600:	080015f0 	.word	0x080015f0
 8000604:	080015f4 	.word	0x080015f4

08000608 <memset>:
 8000608:	4402      	add	r2, r0
 800060a:	4603      	mov	r3, r0
 800060c:	4293      	cmp	r3, r2
 800060e:	d100      	bne.n	8000612 <memset+0xa>
 8000610:	4770      	bx	lr
 8000612:	f803 1b01 	strb.w	r1, [r3], #1
 8000616:	e7f9      	b.n	800060c <memset+0x4>

08000618 <iprintf>:
 8000618:	b40f      	push	{r0, r1, r2, r3}
 800061a:	4b0a      	ldr	r3, [pc, #40]	; (8000644 <iprintf+0x2c>)
 800061c:	b513      	push	{r0, r1, r4, lr}
 800061e:	681c      	ldr	r4, [r3, #0]
 8000620:	b124      	cbz	r4, 800062c <iprintf+0x14>
 8000622:	69a3      	ldr	r3, [r4, #24]
 8000624:	b913      	cbnz	r3, 800062c <iprintf+0x14>
 8000626:	4620      	mov	r0, r4
 8000628:	f000 fa22 	bl	8000a70 <__sinit>
 800062c:	ab05      	add	r3, sp, #20
 800062e:	9a04      	ldr	r2, [sp, #16]
 8000630:	68a1      	ldr	r1, [r4, #8]
 8000632:	9301      	str	r3, [sp, #4]
 8000634:	4620      	mov	r0, r4
 8000636:	f000 fbdb 	bl	8000df0 <_vfiprintf_r>
 800063a:	b002      	add	sp, #8
 800063c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000640:	b004      	add	sp, #16
 8000642:	4770      	bx	lr
 8000644:	20000000 	.word	0x20000000

08000648 <_puts_r>:
 8000648:	b570      	push	{r4, r5, r6, lr}
 800064a:	460e      	mov	r6, r1
 800064c:	4605      	mov	r5, r0
 800064e:	b118      	cbz	r0, 8000658 <_puts_r+0x10>
 8000650:	6983      	ldr	r3, [r0, #24]
 8000652:	b90b      	cbnz	r3, 8000658 <_puts_r+0x10>
 8000654:	f000 fa0c 	bl	8000a70 <__sinit>
 8000658:	69ab      	ldr	r3, [r5, #24]
 800065a:	68ac      	ldr	r4, [r5, #8]
 800065c:	b913      	cbnz	r3, 8000664 <_puts_r+0x1c>
 800065e:	4628      	mov	r0, r5
 8000660:	f000 fa06 	bl	8000a70 <__sinit>
 8000664:	4b23      	ldr	r3, [pc, #140]	; (80006f4 <_puts_r+0xac>)
 8000666:	429c      	cmp	r4, r3
 8000668:	d117      	bne.n	800069a <_puts_r+0x52>
 800066a:	686c      	ldr	r4, [r5, #4]
 800066c:	89a3      	ldrh	r3, [r4, #12]
 800066e:	071b      	lsls	r3, r3, #28
 8000670:	d51d      	bpl.n	80006ae <_puts_r+0x66>
 8000672:	6923      	ldr	r3, [r4, #16]
 8000674:	b1db      	cbz	r3, 80006ae <_puts_r+0x66>
 8000676:	3e01      	subs	r6, #1
 8000678:	68a3      	ldr	r3, [r4, #8]
 800067a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800067e:	3b01      	subs	r3, #1
 8000680:	60a3      	str	r3, [r4, #8]
 8000682:	b9e9      	cbnz	r1, 80006c0 <_puts_r+0x78>
 8000684:	2b00      	cmp	r3, #0
 8000686:	da2e      	bge.n	80006e6 <_puts_r+0x9e>
 8000688:	4622      	mov	r2, r4
 800068a:	210a      	movs	r1, #10
 800068c:	4628      	mov	r0, r5
 800068e:	f000 f83f 	bl	8000710 <__swbuf_r>
 8000692:	3001      	adds	r0, #1
 8000694:	d011      	beq.n	80006ba <_puts_r+0x72>
 8000696:	200a      	movs	r0, #10
 8000698:	e011      	b.n	80006be <_puts_r+0x76>
 800069a:	4b17      	ldr	r3, [pc, #92]	; (80006f8 <_puts_r+0xb0>)
 800069c:	429c      	cmp	r4, r3
 800069e:	d101      	bne.n	80006a4 <_puts_r+0x5c>
 80006a0:	68ac      	ldr	r4, [r5, #8]
 80006a2:	e7e3      	b.n	800066c <_puts_r+0x24>
 80006a4:	4b15      	ldr	r3, [pc, #84]	; (80006fc <_puts_r+0xb4>)
 80006a6:	429c      	cmp	r4, r3
 80006a8:	bf08      	it	eq
 80006aa:	68ec      	ldreq	r4, [r5, #12]
 80006ac:	e7de      	b.n	800066c <_puts_r+0x24>
 80006ae:	4621      	mov	r1, r4
 80006b0:	4628      	mov	r0, r5
 80006b2:	f000 f87f 	bl	80007b4 <__swsetup_r>
 80006b6:	2800      	cmp	r0, #0
 80006b8:	d0dd      	beq.n	8000676 <_puts_r+0x2e>
 80006ba:	f04f 30ff 	mov.w	r0, #4294967295
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2b00      	cmp	r3, #0
 80006c2:	da04      	bge.n	80006ce <_puts_r+0x86>
 80006c4:	69a2      	ldr	r2, [r4, #24]
 80006c6:	429a      	cmp	r2, r3
 80006c8:	dc06      	bgt.n	80006d8 <_puts_r+0x90>
 80006ca:	290a      	cmp	r1, #10
 80006cc:	d004      	beq.n	80006d8 <_puts_r+0x90>
 80006ce:	6823      	ldr	r3, [r4, #0]
 80006d0:	1c5a      	adds	r2, r3, #1
 80006d2:	6022      	str	r2, [r4, #0]
 80006d4:	7019      	strb	r1, [r3, #0]
 80006d6:	e7cf      	b.n	8000678 <_puts_r+0x30>
 80006d8:	4622      	mov	r2, r4
 80006da:	4628      	mov	r0, r5
 80006dc:	f000 f818 	bl	8000710 <__swbuf_r>
 80006e0:	3001      	adds	r0, #1
 80006e2:	d1c9      	bne.n	8000678 <_puts_r+0x30>
 80006e4:	e7e9      	b.n	80006ba <_puts_r+0x72>
 80006e6:	6823      	ldr	r3, [r4, #0]
 80006e8:	200a      	movs	r0, #10
 80006ea:	1c5a      	adds	r2, r3, #1
 80006ec:	6022      	str	r2, [r4, #0]
 80006ee:	7018      	strb	r0, [r3, #0]
 80006f0:	e7e5      	b.n	80006be <_puts_r+0x76>
 80006f2:	bf00      	nop
 80006f4:	0800157c 	.word	0x0800157c
 80006f8:	0800159c 	.word	0x0800159c
 80006fc:	0800155c 	.word	0x0800155c

08000700 <puts>:
 8000700:	4b02      	ldr	r3, [pc, #8]	; (800070c <puts+0xc>)
 8000702:	4601      	mov	r1, r0
 8000704:	6818      	ldr	r0, [r3, #0]
 8000706:	f7ff bf9f 	b.w	8000648 <_puts_r>
 800070a:	bf00      	nop
 800070c:	20000000 	.word	0x20000000

08000710 <__swbuf_r>:
 8000710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000712:	460e      	mov	r6, r1
 8000714:	4614      	mov	r4, r2
 8000716:	4605      	mov	r5, r0
 8000718:	b118      	cbz	r0, 8000722 <__swbuf_r+0x12>
 800071a:	6983      	ldr	r3, [r0, #24]
 800071c:	b90b      	cbnz	r3, 8000722 <__swbuf_r+0x12>
 800071e:	f000 f9a7 	bl	8000a70 <__sinit>
 8000722:	4b21      	ldr	r3, [pc, #132]	; (80007a8 <__swbuf_r+0x98>)
 8000724:	429c      	cmp	r4, r3
 8000726:	d12a      	bne.n	800077e <__swbuf_r+0x6e>
 8000728:	686c      	ldr	r4, [r5, #4]
 800072a:	69a3      	ldr	r3, [r4, #24]
 800072c:	60a3      	str	r3, [r4, #8]
 800072e:	89a3      	ldrh	r3, [r4, #12]
 8000730:	071a      	lsls	r2, r3, #28
 8000732:	d52e      	bpl.n	8000792 <__swbuf_r+0x82>
 8000734:	6923      	ldr	r3, [r4, #16]
 8000736:	b363      	cbz	r3, 8000792 <__swbuf_r+0x82>
 8000738:	6923      	ldr	r3, [r4, #16]
 800073a:	6820      	ldr	r0, [r4, #0]
 800073c:	1ac0      	subs	r0, r0, r3
 800073e:	6963      	ldr	r3, [r4, #20]
 8000740:	b2f6      	uxtb	r6, r6
 8000742:	4283      	cmp	r3, r0
 8000744:	4637      	mov	r7, r6
 8000746:	dc04      	bgt.n	8000752 <__swbuf_r+0x42>
 8000748:	4621      	mov	r1, r4
 800074a:	4628      	mov	r0, r5
 800074c:	f000 f926 	bl	800099c <_fflush_r>
 8000750:	bb28      	cbnz	r0, 800079e <__swbuf_r+0x8e>
 8000752:	68a3      	ldr	r3, [r4, #8]
 8000754:	3b01      	subs	r3, #1
 8000756:	60a3      	str	r3, [r4, #8]
 8000758:	6823      	ldr	r3, [r4, #0]
 800075a:	1c5a      	adds	r2, r3, #1
 800075c:	6022      	str	r2, [r4, #0]
 800075e:	701e      	strb	r6, [r3, #0]
 8000760:	6963      	ldr	r3, [r4, #20]
 8000762:	3001      	adds	r0, #1
 8000764:	4283      	cmp	r3, r0
 8000766:	d004      	beq.n	8000772 <__swbuf_r+0x62>
 8000768:	89a3      	ldrh	r3, [r4, #12]
 800076a:	07db      	lsls	r3, r3, #31
 800076c:	d519      	bpl.n	80007a2 <__swbuf_r+0x92>
 800076e:	2e0a      	cmp	r6, #10
 8000770:	d117      	bne.n	80007a2 <__swbuf_r+0x92>
 8000772:	4621      	mov	r1, r4
 8000774:	4628      	mov	r0, r5
 8000776:	f000 f911 	bl	800099c <_fflush_r>
 800077a:	b190      	cbz	r0, 80007a2 <__swbuf_r+0x92>
 800077c:	e00f      	b.n	800079e <__swbuf_r+0x8e>
 800077e:	4b0b      	ldr	r3, [pc, #44]	; (80007ac <__swbuf_r+0x9c>)
 8000780:	429c      	cmp	r4, r3
 8000782:	d101      	bne.n	8000788 <__swbuf_r+0x78>
 8000784:	68ac      	ldr	r4, [r5, #8]
 8000786:	e7d0      	b.n	800072a <__swbuf_r+0x1a>
 8000788:	4b09      	ldr	r3, [pc, #36]	; (80007b0 <__swbuf_r+0xa0>)
 800078a:	429c      	cmp	r4, r3
 800078c:	bf08      	it	eq
 800078e:	68ec      	ldreq	r4, [r5, #12]
 8000790:	e7cb      	b.n	800072a <__swbuf_r+0x1a>
 8000792:	4621      	mov	r1, r4
 8000794:	4628      	mov	r0, r5
 8000796:	f000 f80d 	bl	80007b4 <__swsetup_r>
 800079a:	2800      	cmp	r0, #0
 800079c:	d0cc      	beq.n	8000738 <__swbuf_r+0x28>
 800079e:	f04f 37ff 	mov.w	r7, #4294967295
 80007a2:	4638      	mov	r0, r7
 80007a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007a6:	bf00      	nop
 80007a8:	0800157c 	.word	0x0800157c
 80007ac:	0800159c 	.word	0x0800159c
 80007b0:	0800155c 	.word	0x0800155c

080007b4 <__swsetup_r>:
 80007b4:	4b32      	ldr	r3, [pc, #200]	; (8000880 <__swsetup_r+0xcc>)
 80007b6:	b570      	push	{r4, r5, r6, lr}
 80007b8:	681d      	ldr	r5, [r3, #0]
 80007ba:	4606      	mov	r6, r0
 80007bc:	460c      	mov	r4, r1
 80007be:	b125      	cbz	r5, 80007ca <__swsetup_r+0x16>
 80007c0:	69ab      	ldr	r3, [r5, #24]
 80007c2:	b913      	cbnz	r3, 80007ca <__swsetup_r+0x16>
 80007c4:	4628      	mov	r0, r5
 80007c6:	f000 f953 	bl	8000a70 <__sinit>
 80007ca:	4b2e      	ldr	r3, [pc, #184]	; (8000884 <__swsetup_r+0xd0>)
 80007cc:	429c      	cmp	r4, r3
 80007ce:	d10f      	bne.n	80007f0 <__swsetup_r+0x3c>
 80007d0:	686c      	ldr	r4, [r5, #4]
 80007d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80007d6:	b29a      	uxth	r2, r3
 80007d8:	0715      	lsls	r5, r2, #28
 80007da:	d42c      	bmi.n	8000836 <__swsetup_r+0x82>
 80007dc:	06d0      	lsls	r0, r2, #27
 80007de:	d411      	bmi.n	8000804 <__swsetup_r+0x50>
 80007e0:	2209      	movs	r2, #9
 80007e2:	6032      	str	r2, [r6, #0]
 80007e4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007e8:	81a3      	strh	r3, [r4, #12]
 80007ea:	f04f 30ff 	mov.w	r0, #4294967295
 80007ee:	e03e      	b.n	800086e <__swsetup_r+0xba>
 80007f0:	4b25      	ldr	r3, [pc, #148]	; (8000888 <__swsetup_r+0xd4>)
 80007f2:	429c      	cmp	r4, r3
 80007f4:	d101      	bne.n	80007fa <__swsetup_r+0x46>
 80007f6:	68ac      	ldr	r4, [r5, #8]
 80007f8:	e7eb      	b.n	80007d2 <__swsetup_r+0x1e>
 80007fa:	4b24      	ldr	r3, [pc, #144]	; (800088c <__swsetup_r+0xd8>)
 80007fc:	429c      	cmp	r4, r3
 80007fe:	bf08      	it	eq
 8000800:	68ec      	ldreq	r4, [r5, #12]
 8000802:	e7e6      	b.n	80007d2 <__swsetup_r+0x1e>
 8000804:	0751      	lsls	r1, r2, #29
 8000806:	d512      	bpl.n	800082e <__swsetup_r+0x7a>
 8000808:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800080a:	b141      	cbz	r1, 800081e <__swsetup_r+0x6a>
 800080c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000810:	4299      	cmp	r1, r3
 8000812:	d002      	beq.n	800081a <__swsetup_r+0x66>
 8000814:	4630      	mov	r0, r6
 8000816:	f000 fa19 	bl	8000c4c <_free_r>
 800081a:	2300      	movs	r3, #0
 800081c:	6363      	str	r3, [r4, #52]	; 0x34
 800081e:	89a3      	ldrh	r3, [r4, #12]
 8000820:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000824:	81a3      	strh	r3, [r4, #12]
 8000826:	2300      	movs	r3, #0
 8000828:	6063      	str	r3, [r4, #4]
 800082a:	6923      	ldr	r3, [r4, #16]
 800082c:	6023      	str	r3, [r4, #0]
 800082e:	89a3      	ldrh	r3, [r4, #12]
 8000830:	f043 0308 	orr.w	r3, r3, #8
 8000834:	81a3      	strh	r3, [r4, #12]
 8000836:	6923      	ldr	r3, [r4, #16]
 8000838:	b94b      	cbnz	r3, 800084e <__swsetup_r+0x9a>
 800083a:	89a3      	ldrh	r3, [r4, #12]
 800083c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000840:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000844:	d003      	beq.n	800084e <__swsetup_r+0x9a>
 8000846:	4621      	mov	r1, r4
 8000848:	4630      	mov	r0, r6
 800084a:	f000 f9bf 	bl	8000bcc <__smakebuf_r>
 800084e:	89a2      	ldrh	r2, [r4, #12]
 8000850:	f012 0301 	ands.w	r3, r2, #1
 8000854:	d00c      	beq.n	8000870 <__swsetup_r+0xbc>
 8000856:	2300      	movs	r3, #0
 8000858:	60a3      	str	r3, [r4, #8]
 800085a:	6963      	ldr	r3, [r4, #20]
 800085c:	425b      	negs	r3, r3
 800085e:	61a3      	str	r3, [r4, #24]
 8000860:	6923      	ldr	r3, [r4, #16]
 8000862:	b953      	cbnz	r3, 800087a <__swsetup_r+0xc6>
 8000864:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000868:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 800086c:	d1ba      	bne.n	80007e4 <__swsetup_r+0x30>
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	0792      	lsls	r2, r2, #30
 8000872:	bf58      	it	pl
 8000874:	6963      	ldrpl	r3, [r4, #20]
 8000876:	60a3      	str	r3, [r4, #8]
 8000878:	e7f2      	b.n	8000860 <__swsetup_r+0xac>
 800087a:	2000      	movs	r0, #0
 800087c:	e7f7      	b.n	800086e <__swsetup_r+0xba>
 800087e:	bf00      	nop
 8000880:	20000000 	.word	0x20000000
 8000884:	0800157c 	.word	0x0800157c
 8000888:	0800159c 	.word	0x0800159c
 800088c:	0800155c 	.word	0x0800155c

08000890 <__sflush_r>:
 8000890:	898a      	ldrh	r2, [r1, #12]
 8000892:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000896:	4605      	mov	r5, r0
 8000898:	0710      	lsls	r0, r2, #28
 800089a:	460c      	mov	r4, r1
 800089c:	d458      	bmi.n	8000950 <__sflush_r+0xc0>
 800089e:	684b      	ldr	r3, [r1, #4]
 80008a0:	2b00      	cmp	r3, #0
 80008a2:	dc05      	bgt.n	80008b0 <__sflush_r+0x20>
 80008a4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80008a6:	2b00      	cmp	r3, #0
 80008a8:	dc02      	bgt.n	80008b0 <__sflush_r+0x20>
 80008aa:	2000      	movs	r0, #0
 80008ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008b0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008b2:	2e00      	cmp	r6, #0
 80008b4:	d0f9      	beq.n	80008aa <__sflush_r+0x1a>
 80008b6:	2300      	movs	r3, #0
 80008b8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80008bc:	682f      	ldr	r7, [r5, #0]
 80008be:	6a21      	ldr	r1, [r4, #32]
 80008c0:	602b      	str	r3, [r5, #0]
 80008c2:	d032      	beq.n	800092a <__sflush_r+0x9a>
 80008c4:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80008c6:	89a3      	ldrh	r3, [r4, #12]
 80008c8:	075a      	lsls	r2, r3, #29
 80008ca:	d505      	bpl.n	80008d8 <__sflush_r+0x48>
 80008cc:	6863      	ldr	r3, [r4, #4]
 80008ce:	1ac0      	subs	r0, r0, r3
 80008d0:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80008d2:	b10b      	cbz	r3, 80008d8 <__sflush_r+0x48>
 80008d4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80008d6:	1ac0      	subs	r0, r0, r3
 80008d8:	2300      	movs	r3, #0
 80008da:	4602      	mov	r2, r0
 80008dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80008de:	6a21      	ldr	r1, [r4, #32]
 80008e0:	4628      	mov	r0, r5
 80008e2:	47b0      	blx	r6
 80008e4:	1c43      	adds	r3, r0, #1
 80008e6:	89a3      	ldrh	r3, [r4, #12]
 80008e8:	d106      	bne.n	80008f8 <__sflush_r+0x68>
 80008ea:	6829      	ldr	r1, [r5, #0]
 80008ec:	291d      	cmp	r1, #29
 80008ee:	d848      	bhi.n	8000982 <__sflush_r+0xf2>
 80008f0:	4a29      	ldr	r2, [pc, #164]	; (8000998 <__sflush_r+0x108>)
 80008f2:	40ca      	lsrs	r2, r1
 80008f4:	07d6      	lsls	r6, r2, #31
 80008f6:	d544      	bpl.n	8000982 <__sflush_r+0xf2>
 80008f8:	2200      	movs	r2, #0
 80008fa:	6062      	str	r2, [r4, #4]
 80008fc:	04d9      	lsls	r1, r3, #19
 80008fe:	6922      	ldr	r2, [r4, #16]
 8000900:	6022      	str	r2, [r4, #0]
 8000902:	d504      	bpl.n	800090e <__sflush_r+0x7e>
 8000904:	1c42      	adds	r2, r0, #1
 8000906:	d101      	bne.n	800090c <__sflush_r+0x7c>
 8000908:	682b      	ldr	r3, [r5, #0]
 800090a:	b903      	cbnz	r3, 800090e <__sflush_r+0x7e>
 800090c:	6560      	str	r0, [r4, #84]	; 0x54
 800090e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000910:	602f      	str	r7, [r5, #0]
 8000912:	2900      	cmp	r1, #0
 8000914:	d0c9      	beq.n	80008aa <__sflush_r+0x1a>
 8000916:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800091a:	4299      	cmp	r1, r3
 800091c:	d002      	beq.n	8000924 <__sflush_r+0x94>
 800091e:	4628      	mov	r0, r5
 8000920:	f000 f994 	bl	8000c4c <_free_r>
 8000924:	2000      	movs	r0, #0
 8000926:	6360      	str	r0, [r4, #52]	; 0x34
 8000928:	e7c0      	b.n	80008ac <__sflush_r+0x1c>
 800092a:	2301      	movs	r3, #1
 800092c:	4628      	mov	r0, r5
 800092e:	47b0      	blx	r6
 8000930:	1c41      	adds	r1, r0, #1
 8000932:	d1c8      	bne.n	80008c6 <__sflush_r+0x36>
 8000934:	682b      	ldr	r3, [r5, #0]
 8000936:	2b00      	cmp	r3, #0
 8000938:	d0c5      	beq.n	80008c6 <__sflush_r+0x36>
 800093a:	2b1d      	cmp	r3, #29
 800093c:	d001      	beq.n	8000942 <__sflush_r+0xb2>
 800093e:	2b16      	cmp	r3, #22
 8000940:	d101      	bne.n	8000946 <__sflush_r+0xb6>
 8000942:	602f      	str	r7, [r5, #0]
 8000944:	e7b1      	b.n	80008aa <__sflush_r+0x1a>
 8000946:	89a3      	ldrh	r3, [r4, #12]
 8000948:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800094c:	81a3      	strh	r3, [r4, #12]
 800094e:	e7ad      	b.n	80008ac <__sflush_r+0x1c>
 8000950:	690f      	ldr	r7, [r1, #16]
 8000952:	2f00      	cmp	r7, #0
 8000954:	d0a9      	beq.n	80008aa <__sflush_r+0x1a>
 8000956:	0793      	lsls	r3, r2, #30
 8000958:	680e      	ldr	r6, [r1, #0]
 800095a:	bf08      	it	eq
 800095c:	694b      	ldreq	r3, [r1, #20]
 800095e:	600f      	str	r7, [r1, #0]
 8000960:	bf18      	it	ne
 8000962:	2300      	movne	r3, #0
 8000964:	eba6 0807 	sub.w	r8, r6, r7
 8000968:	608b      	str	r3, [r1, #8]
 800096a:	f1b8 0f00 	cmp.w	r8, #0
 800096e:	dd9c      	ble.n	80008aa <__sflush_r+0x1a>
 8000970:	4643      	mov	r3, r8
 8000972:	463a      	mov	r2, r7
 8000974:	6a21      	ldr	r1, [r4, #32]
 8000976:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000978:	4628      	mov	r0, r5
 800097a:	47b0      	blx	r6
 800097c:	2800      	cmp	r0, #0
 800097e:	dc06      	bgt.n	800098e <__sflush_r+0xfe>
 8000980:	89a3      	ldrh	r3, [r4, #12]
 8000982:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000986:	81a3      	strh	r3, [r4, #12]
 8000988:	f04f 30ff 	mov.w	r0, #4294967295
 800098c:	e78e      	b.n	80008ac <__sflush_r+0x1c>
 800098e:	4407      	add	r7, r0
 8000990:	eba8 0800 	sub.w	r8, r8, r0
 8000994:	e7e9      	b.n	800096a <__sflush_r+0xda>
 8000996:	bf00      	nop
 8000998:	20400001 	.word	0x20400001

0800099c <_fflush_r>:
 800099c:	b538      	push	{r3, r4, r5, lr}
 800099e:	690b      	ldr	r3, [r1, #16]
 80009a0:	4605      	mov	r5, r0
 80009a2:	460c      	mov	r4, r1
 80009a4:	b1db      	cbz	r3, 80009de <_fflush_r+0x42>
 80009a6:	b118      	cbz	r0, 80009b0 <_fflush_r+0x14>
 80009a8:	6983      	ldr	r3, [r0, #24]
 80009aa:	b90b      	cbnz	r3, 80009b0 <_fflush_r+0x14>
 80009ac:	f000 f860 	bl	8000a70 <__sinit>
 80009b0:	4b0c      	ldr	r3, [pc, #48]	; (80009e4 <_fflush_r+0x48>)
 80009b2:	429c      	cmp	r4, r3
 80009b4:	d109      	bne.n	80009ca <_fflush_r+0x2e>
 80009b6:	686c      	ldr	r4, [r5, #4]
 80009b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80009bc:	b17b      	cbz	r3, 80009de <_fflush_r+0x42>
 80009be:	4621      	mov	r1, r4
 80009c0:	4628      	mov	r0, r5
 80009c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80009c6:	f7ff bf63 	b.w	8000890 <__sflush_r>
 80009ca:	4b07      	ldr	r3, [pc, #28]	; (80009e8 <_fflush_r+0x4c>)
 80009cc:	429c      	cmp	r4, r3
 80009ce:	d101      	bne.n	80009d4 <_fflush_r+0x38>
 80009d0:	68ac      	ldr	r4, [r5, #8]
 80009d2:	e7f1      	b.n	80009b8 <_fflush_r+0x1c>
 80009d4:	4b05      	ldr	r3, [pc, #20]	; (80009ec <_fflush_r+0x50>)
 80009d6:	429c      	cmp	r4, r3
 80009d8:	bf08      	it	eq
 80009da:	68ec      	ldreq	r4, [r5, #12]
 80009dc:	e7ec      	b.n	80009b8 <_fflush_r+0x1c>
 80009de:	2000      	movs	r0, #0
 80009e0:	bd38      	pop	{r3, r4, r5, pc}
 80009e2:	bf00      	nop
 80009e4:	0800157c 	.word	0x0800157c
 80009e8:	0800159c 	.word	0x0800159c
 80009ec:	0800155c 	.word	0x0800155c

080009f0 <std>:
 80009f0:	2300      	movs	r3, #0
 80009f2:	b510      	push	{r4, lr}
 80009f4:	4604      	mov	r4, r0
 80009f6:	e9c0 3300 	strd	r3, r3, [r0]
 80009fa:	6083      	str	r3, [r0, #8]
 80009fc:	8181      	strh	r1, [r0, #12]
 80009fe:	6643      	str	r3, [r0, #100]	; 0x64
 8000a00:	81c2      	strh	r2, [r0, #14]
 8000a02:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000a06:	6183      	str	r3, [r0, #24]
 8000a08:	4619      	mov	r1, r3
 8000a0a:	2208      	movs	r2, #8
 8000a0c:	305c      	adds	r0, #92	; 0x5c
 8000a0e:	f7ff fdfb 	bl	8000608 <memset>
 8000a12:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <std+0x38>)
 8000a14:	6263      	str	r3, [r4, #36]	; 0x24
 8000a16:	4b05      	ldr	r3, [pc, #20]	; (8000a2c <std+0x3c>)
 8000a18:	62a3      	str	r3, [r4, #40]	; 0x28
 8000a1a:	4b05      	ldr	r3, [pc, #20]	; (8000a30 <std+0x40>)
 8000a1c:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000a1e:	4b05      	ldr	r3, [pc, #20]	; (8000a34 <std+0x44>)
 8000a20:	6224      	str	r4, [r4, #32]
 8000a22:	6323      	str	r3, [r4, #48]	; 0x30
 8000a24:	bd10      	pop	{r4, pc}
 8000a26:	bf00      	nop
 8000a28:	0800134d 	.word	0x0800134d
 8000a2c:	0800136f 	.word	0x0800136f
 8000a30:	080013a7 	.word	0x080013a7
 8000a34:	080013cb 	.word	0x080013cb

08000a38 <_cleanup_r>:
 8000a38:	4901      	ldr	r1, [pc, #4]	; (8000a40 <_cleanup_r+0x8>)
 8000a3a:	f000 b885 	b.w	8000b48 <_fwalk_reent>
 8000a3e:	bf00      	nop
 8000a40:	0800099d 	.word	0x0800099d

08000a44 <__sfmoreglue>:
 8000a44:	b570      	push	{r4, r5, r6, lr}
 8000a46:	1e4a      	subs	r2, r1, #1
 8000a48:	2568      	movs	r5, #104	; 0x68
 8000a4a:	4355      	muls	r5, r2
 8000a4c:	460e      	mov	r6, r1
 8000a4e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a52:	f000 f949 	bl	8000ce8 <_malloc_r>
 8000a56:	4604      	mov	r4, r0
 8000a58:	b140      	cbz	r0, 8000a6c <__sfmoreglue+0x28>
 8000a5a:	2100      	movs	r1, #0
 8000a5c:	e9c0 1600 	strd	r1, r6, [r0]
 8000a60:	300c      	adds	r0, #12
 8000a62:	60a0      	str	r0, [r4, #8]
 8000a64:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a68:	f7ff fdce 	bl	8000608 <memset>
 8000a6c:	4620      	mov	r0, r4
 8000a6e:	bd70      	pop	{r4, r5, r6, pc}

08000a70 <__sinit>:
 8000a70:	6983      	ldr	r3, [r0, #24]
 8000a72:	b510      	push	{r4, lr}
 8000a74:	4604      	mov	r4, r0
 8000a76:	bb33      	cbnz	r3, 8000ac6 <__sinit+0x56>
 8000a78:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8000a7c:	6503      	str	r3, [r0, #80]	; 0x50
 8000a7e:	4b12      	ldr	r3, [pc, #72]	; (8000ac8 <__sinit+0x58>)
 8000a80:	4a12      	ldr	r2, [pc, #72]	; (8000acc <__sinit+0x5c>)
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	6282      	str	r2, [r0, #40]	; 0x28
 8000a86:	4298      	cmp	r0, r3
 8000a88:	bf04      	itt	eq
 8000a8a:	2301      	moveq	r3, #1
 8000a8c:	6183      	streq	r3, [r0, #24]
 8000a8e:	f000 f81f 	bl	8000ad0 <__sfp>
 8000a92:	6060      	str	r0, [r4, #4]
 8000a94:	4620      	mov	r0, r4
 8000a96:	f000 f81b 	bl	8000ad0 <__sfp>
 8000a9a:	60a0      	str	r0, [r4, #8]
 8000a9c:	4620      	mov	r0, r4
 8000a9e:	f000 f817 	bl	8000ad0 <__sfp>
 8000aa2:	2200      	movs	r2, #0
 8000aa4:	60e0      	str	r0, [r4, #12]
 8000aa6:	2104      	movs	r1, #4
 8000aa8:	6860      	ldr	r0, [r4, #4]
 8000aaa:	f7ff ffa1 	bl	80009f0 <std>
 8000aae:	2201      	movs	r2, #1
 8000ab0:	2109      	movs	r1, #9
 8000ab2:	68a0      	ldr	r0, [r4, #8]
 8000ab4:	f7ff ff9c 	bl	80009f0 <std>
 8000ab8:	2202      	movs	r2, #2
 8000aba:	2112      	movs	r1, #18
 8000abc:	68e0      	ldr	r0, [r4, #12]
 8000abe:	f7ff ff97 	bl	80009f0 <std>
 8000ac2:	2301      	movs	r3, #1
 8000ac4:	61a3      	str	r3, [r4, #24]
 8000ac6:	bd10      	pop	{r4, pc}
 8000ac8:	08001558 	.word	0x08001558
 8000acc:	08000a39 	.word	0x08000a39

08000ad0 <__sfp>:
 8000ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ad2:	4b1b      	ldr	r3, [pc, #108]	; (8000b40 <__sfp+0x70>)
 8000ad4:	681e      	ldr	r6, [r3, #0]
 8000ad6:	69b3      	ldr	r3, [r6, #24]
 8000ad8:	4607      	mov	r7, r0
 8000ada:	b913      	cbnz	r3, 8000ae2 <__sfp+0x12>
 8000adc:	4630      	mov	r0, r6
 8000ade:	f7ff ffc7 	bl	8000a70 <__sinit>
 8000ae2:	3648      	adds	r6, #72	; 0x48
 8000ae4:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ae8:	3b01      	subs	r3, #1
 8000aea:	d503      	bpl.n	8000af4 <__sfp+0x24>
 8000aec:	6833      	ldr	r3, [r6, #0]
 8000aee:	b133      	cbz	r3, 8000afe <__sfp+0x2e>
 8000af0:	6836      	ldr	r6, [r6, #0]
 8000af2:	e7f7      	b.n	8000ae4 <__sfp+0x14>
 8000af4:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000af8:	b16d      	cbz	r5, 8000b16 <__sfp+0x46>
 8000afa:	3468      	adds	r4, #104	; 0x68
 8000afc:	e7f4      	b.n	8000ae8 <__sfp+0x18>
 8000afe:	2104      	movs	r1, #4
 8000b00:	4638      	mov	r0, r7
 8000b02:	f7ff ff9f 	bl	8000a44 <__sfmoreglue>
 8000b06:	6030      	str	r0, [r6, #0]
 8000b08:	2800      	cmp	r0, #0
 8000b0a:	d1f1      	bne.n	8000af0 <__sfp+0x20>
 8000b0c:	230c      	movs	r3, #12
 8000b0e:	603b      	str	r3, [r7, #0]
 8000b10:	4604      	mov	r4, r0
 8000b12:	4620      	mov	r0, r4
 8000b14:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b16:	4b0b      	ldr	r3, [pc, #44]	; (8000b44 <__sfp+0x74>)
 8000b18:	6665      	str	r5, [r4, #100]	; 0x64
 8000b1a:	e9c4 5500 	strd	r5, r5, [r4]
 8000b1e:	60a5      	str	r5, [r4, #8]
 8000b20:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8000b24:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8000b28:	2208      	movs	r2, #8
 8000b2a:	4629      	mov	r1, r5
 8000b2c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b30:	f7ff fd6a 	bl	8000608 <memset>
 8000b34:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b38:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b3c:	e7e9      	b.n	8000b12 <__sfp+0x42>
 8000b3e:	bf00      	nop
 8000b40:	08001558 	.word	0x08001558
 8000b44:	ffff0001 	.word	0xffff0001

08000b48 <_fwalk_reent>:
 8000b48:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b4c:	4680      	mov	r8, r0
 8000b4e:	4689      	mov	r9, r1
 8000b50:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b54:	2600      	movs	r6, #0
 8000b56:	b914      	cbnz	r4, 8000b5e <_fwalk_reent+0x16>
 8000b58:	4630      	mov	r0, r6
 8000b5a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b5e:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8000b62:	3f01      	subs	r7, #1
 8000b64:	d501      	bpl.n	8000b6a <_fwalk_reent+0x22>
 8000b66:	6824      	ldr	r4, [r4, #0]
 8000b68:	e7f5      	b.n	8000b56 <_fwalk_reent+0xe>
 8000b6a:	89ab      	ldrh	r3, [r5, #12]
 8000b6c:	2b01      	cmp	r3, #1
 8000b6e:	d907      	bls.n	8000b80 <_fwalk_reent+0x38>
 8000b70:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b74:	3301      	adds	r3, #1
 8000b76:	d003      	beq.n	8000b80 <_fwalk_reent+0x38>
 8000b78:	4629      	mov	r1, r5
 8000b7a:	4640      	mov	r0, r8
 8000b7c:	47c8      	blx	r9
 8000b7e:	4306      	orrs	r6, r0
 8000b80:	3568      	adds	r5, #104	; 0x68
 8000b82:	e7ee      	b.n	8000b62 <_fwalk_reent+0x1a>

08000b84 <__swhatbuf_r>:
 8000b84:	b570      	push	{r4, r5, r6, lr}
 8000b86:	460e      	mov	r6, r1
 8000b88:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b8c:	2900      	cmp	r1, #0
 8000b8e:	b096      	sub	sp, #88	; 0x58
 8000b90:	4614      	mov	r4, r2
 8000b92:	461d      	mov	r5, r3
 8000b94:	da07      	bge.n	8000ba6 <__swhatbuf_r+0x22>
 8000b96:	2300      	movs	r3, #0
 8000b98:	602b      	str	r3, [r5, #0]
 8000b9a:	89b3      	ldrh	r3, [r6, #12]
 8000b9c:	061a      	lsls	r2, r3, #24
 8000b9e:	d410      	bmi.n	8000bc2 <__swhatbuf_r+0x3e>
 8000ba0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000ba4:	e00e      	b.n	8000bc4 <__swhatbuf_r+0x40>
 8000ba6:	466a      	mov	r2, sp
 8000ba8:	f000 fc36 	bl	8001418 <_fstat_r>
 8000bac:	2800      	cmp	r0, #0
 8000bae:	dbf2      	blt.n	8000b96 <__swhatbuf_r+0x12>
 8000bb0:	9a01      	ldr	r2, [sp, #4]
 8000bb2:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000bb6:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000bba:	425a      	negs	r2, r3
 8000bbc:	415a      	adcs	r2, r3
 8000bbe:	602a      	str	r2, [r5, #0]
 8000bc0:	e7ee      	b.n	8000ba0 <__swhatbuf_r+0x1c>
 8000bc2:	2340      	movs	r3, #64	; 0x40
 8000bc4:	2000      	movs	r0, #0
 8000bc6:	6023      	str	r3, [r4, #0]
 8000bc8:	b016      	add	sp, #88	; 0x58
 8000bca:	bd70      	pop	{r4, r5, r6, pc}

08000bcc <__smakebuf_r>:
 8000bcc:	898b      	ldrh	r3, [r1, #12]
 8000bce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000bd0:	079d      	lsls	r5, r3, #30
 8000bd2:	4606      	mov	r6, r0
 8000bd4:	460c      	mov	r4, r1
 8000bd6:	d507      	bpl.n	8000be8 <__smakebuf_r+0x1c>
 8000bd8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bdc:	6023      	str	r3, [r4, #0]
 8000bde:	6123      	str	r3, [r4, #16]
 8000be0:	2301      	movs	r3, #1
 8000be2:	6163      	str	r3, [r4, #20]
 8000be4:	b002      	add	sp, #8
 8000be6:	bd70      	pop	{r4, r5, r6, pc}
 8000be8:	ab01      	add	r3, sp, #4
 8000bea:	466a      	mov	r2, sp
 8000bec:	f7ff ffca 	bl	8000b84 <__swhatbuf_r>
 8000bf0:	9900      	ldr	r1, [sp, #0]
 8000bf2:	4605      	mov	r5, r0
 8000bf4:	4630      	mov	r0, r6
 8000bf6:	f000 f877 	bl	8000ce8 <_malloc_r>
 8000bfa:	b948      	cbnz	r0, 8000c10 <__smakebuf_r+0x44>
 8000bfc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c00:	059a      	lsls	r2, r3, #22
 8000c02:	d4ef      	bmi.n	8000be4 <__smakebuf_r+0x18>
 8000c04:	f023 0303 	bic.w	r3, r3, #3
 8000c08:	f043 0302 	orr.w	r3, r3, #2
 8000c0c:	81a3      	strh	r3, [r4, #12]
 8000c0e:	e7e3      	b.n	8000bd8 <__smakebuf_r+0xc>
 8000c10:	4b0d      	ldr	r3, [pc, #52]	; (8000c48 <__smakebuf_r+0x7c>)
 8000c12:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c14:	89a3      	ldrh	r3, [r4, #12]
 8000c16:	6020      	str	r0, [r4, #0]
 8000c18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c1c:	81a3      	strh	r3, [r4, #12]
 8000c1e:	9b00      	ldr	r3, [sp, #0]
 8000c20:	6163      	str	r3, [r4, #20]
 8000c22:	9b01      	ldr	r3, [sp, #4]
 8000c24:	6120      	str	r0, [r4, #16]
 8000c26:	b15b      	cbz	r3, 8000c40 <__smakebuf_r+0x74>
 8000c28:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c2c:	4630      	mov	r0, r6
 8000c2e:	f000 fc05 	bl	800143c <_isatty_r>
 8000c32:	b128      	cbz	r0, 8000c40 <__smakebuf_r+0x74>
 8000c34:	89a3      	ldrh	r3, [r4, #12]
 8000c36:	f023 0303 	bic.w	r3, r3, #3
 8000c3a:	f043 0301 	orr.w	r3, r3, #1
 8000c3e:	81a3      	strh	r3, [r4, #12]
 8000c40:	89a3      	ldrh	r3, [r4, #12]
 8000c42:	431d      	orrs	r5, r3
 8000c44:	81a5      	strh	r5, [r4, #12]
 8000c46:	e7cd      	b.n	8000be4 <__smakebuf_r+0x18>
 8000c48:	08000a39 	.word	0x08000a39

08000c4c <_free_r>:
 8000c4c:	b538      	push	{r3, r4, r5, lr}
 8000c4e:	4605      	mov	r5, r0
 8000c50:	2900      	cmp	r1, #0
 8000c52:	d045      	beq.n	8000ce0 <_free_r+0x94>
 8000c54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c58:	1f0c      	subs	r4, r1, #4
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	bfb8      	it	lt
 8000c5e:	18e4      	addlt	r4, r4, r3
 8000c60:	f000 fc0e 	bl	8001480 <__malloc_lock>
 8000c64:	4a1f      	ldr	r2, [pc, #124]	; (8000ce4 <_free_r+0x98>)
 8000c66:	6813      	ldr	r3, [r2, #0]
 8000c68:	4610      	mov	r0, r2
 8000c6a:	b933      	cbnz	r3, 8000c7a <_free_r+0x2e>
 8000c6c:	6063      	str	r3, [r4, #4]
 8000c6e:	6014      	str	r4, [r2, #0]
 8000c70:	4628      	mov	r0, r5
 8000c72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c76:	f000 bc04 	b.w	8001482 <__malloc_unlock>
 8000c7a:	42a3      	cmp	r3, r4
 8000c7c:	d90c      	bls.n	8000c98 <_free_r+0x4c>
 8000c7e:	6821      	ldr	r1, [r4, #0]
 8000c80:	1862      	adds	r2, r4, r1
 8000c82:	4293      	cmp	r3, r2
 8000c84:	bf04      	itt	eq
 8000c86:	681a      	ldreq	r2, [r3, #0]
 8000c88:	685b      	ldreq	r3, [r3, #4]
 8000c8a:	6063      	str	r3, [r4, #4]
 8000c8c:	bf04      	itt	eq
 8000c8e:	1852      	addeq	r2, r2, r1
 8000c90:	6022      	streq	r2, [r4, #0]
 8000c92:	6004      	str	r4, [r0, #0]
 8000c94:	e7ec      	b.n	8000c70 <_free_r+0x24>
 8000c96:	4613      	mov	r3, r2
 8000c98:	685a      	ldr	r2, [r3, #4]
 8000c9a:	b10a      	cbz	r2, 8000ca0 <_free_r+0x54>
 8000c9c:	42a2      	cmp	r2, r4
 8000c9e:	d9fa      	bls.n	8000c96 <_free_r+0x4a>
 8000ca0:	6819      	ldr	r1, [r3, #0]
 8000ca2:	1858      	adds	r0, r3, r1
 8000ca4:	42a0      	cmp	r0, r4
 8000ca6:	d10b      	bne.n	8000cc0 <_free_r+0x74>
 8000ca8:	6820      	ldr	r0, [r4, #0]
 8000caa:	4401      	add	r1, r0
 8000cac:	1858      	adds	r0, r3, r1
 8000cae:	4282      	cmp	r2, r0
 8000cb0:	6019      	str	r1, [r3, #0]
 8000cb2:	d1dd      	bne.n	8000c70 <_free_r+0x24>
 8000cb4:	6810      	ldr	r0, [r2, #0]
 8000cb6:	6852      	ldr	r2, [r2, #4]
 8000cb8:	605a      	str	r2, [r3, #4]
 8000cba:	4401      	add	r1, r0
 8000cbc:	6019      	str	r1, [r3, #0]
 8000cbe:	e7d7      	b.n	8000c70 <_free_r+0x24>
 8000cc0:	d902      	bls.n	8000cc8 <_free_r+0x7c>
 8000cc2:	230c      	movs	r3, #12
 8000cc4:	602b      	str	r3, [r5, #0]
 8000cc6:	e7d3      	b.n	8000c70 <_free_r+0x24>
 8000cc8:	6820      	ldr	r0, [r4, #0]
 8000cca:	1821      	adds	r1, r4, r0
 8000ccc:	428a      	cmp	r2, r1
 8000cce:	bf04      	itt	eq
 8000cd0:	6811      	ldreq	r1, [r2, #0]
 8000cd2:	6852      	ldreq	r2, [r2, #4]
 8000cd4:	6062      	str	r2, [r4, #4]
 8000cd6:	bf04      	itt	eq
 8000cd8:	1809      	addeq	r1, r1, r0
 8000cda:	6021      	streq	r1, [r4, #0]
 8000cdc:	605c      	str	r4, [r3, #4]
 8000cde:	e7c7      	b.n	8000c70 <_free_r+0x24>
 8000ce0:	bd38      	pop	{r3, r4, r5, pc}
 8000ce2:	bf00      	nop
 8000ce4:	2000008c 	.word	0x2000008c

08000ce8 <_malloc_r>:
 8000ce8:	b570      	push	{r4, r5, r6, lr}
 8000cea:	1ccd      	adds	r5, r1, #3
 8000cec:	f025 0503 	bic.w	r5, r5, #3
 8000cf0:	3508      	adds	r5, #8
 8000cf2:	2d0c      	cmp	r5, #12
 8000cf4:	bf38      	it	cc
 8000cf6:	250c      	movcc	r5, #12
 8000cf8:	2d00      	cmp	r5, #0
 8000cfa:	4606      	mov	r6, r0
 8000cfc:	db01      	blt.n	8000d02 <_malloc_r+0x1a>
 8000cfe:	42a9      	cmp	r1, r5
 8000d00:	d903      	bls.n	8000d0a <_malloc_r+0x22>
 8000d02:	230c      	movs	r3, #12
 8000d04:	6033      	str	r3, [r6, #0]
 8000d06:	2000      	movs	r0, #0
 8000d08:	bd70      	pop	{r4, r5, r6, pc}
 8000d0a:	f000 fbb9 	bl	8001480 <__malloc_lock>
 8000d0e:	4a21      	ldr	r2, [pc, #132]	; (8000d94 <_malloc_r+0xac>)
 8000d10:	6814      	ldr	r4, [r2, #0]
 8000d12:	4621      	mov	r1, r4
 8000d14:	b991      	cbnz	r1, 8000d3c <_malloc_r+0x54>
 8000d16:	4c20      	ldr	r4, [pc, #128]	; (8000d98 <_malloc_r+0xb0>)
 8000d18:	6823      	ldr	r3, [r4, #0]
 8000d1a:	b91b      	cbnz	r3, 8000d24 <_malloc_r+0x3c>
 8000d1c:	4630      	mov	r0, r6
 8000d1e:	f000 fb05 	bl	800132c <_sbrk_r>
 8000d22:	6020      	str	r0, [r4, #0]
 8000d24:	4629      	mov	r1, r5
 8000d26:	4630      	mov	r0, r6
 8000d28:	f000 fb00 	bl	800132c <_sbrk_r>
 8000d2c:	1c43      	adds	r3, r0, #1
 8000d2e:	d124      	bne.n	8000d7a <_malloc_r+0x92>
 8000d30:	230c      	movs	r3, #12
 8000d32:	6033      	str	r3, [r6, #0]
 8000d34:	4630      	mov	r0, r6
 8000d36:	f000 fba4 	bl	8001482 <__malloc_unlock>
 8000d3a:	e7e4      	b.n	8000d06 <_malloc_r+0x1e>
 8000d3c:	680b      	ldr	r3, [r1, #0]
 8000d3e:	1b5b      	subs	r3, r3, r5
 8000d40:	d418      	bmi.n	8000d74 <_malloc_r+0x8c>
 8000d42:	2b0b      	cmp	r3, #11
 8000d44:	d90f      	bls.n	8000d66 <_malloc_r+0x7e>
 8000d46:	600b      	str	r3, [r1, #0]
 8000d48:	50cd      	str	r5, [r1, r3]
 8000d4a:	18cc      	adds	r4, r1, r3
 8000d4c:	4630      	mov	r0, r6
 8000d4e:	f000 fb98 	bl	8001482 <__malloc_unlock>
 8000d52:	f104 000b 	add.w	r0, r4, #11
 8000d56:	1d23      	adds	r3, r4, #4
 8000d58:	f020 0007 	bic.w	r0, r0, #7
 8000d5c:	1ac3      	subs	r3, r0, r3
 8000d5e:	d0d3      	beq.n	8000d08 <_malloc_r+0x20>
 8000d60:	425a      	negs	r2, r3
 8000d62:	50e2      	str	r2, [r4, r3]
 8000d64:	e7d0      	b.n	8000d08 <_malloc_r+0x20>
 8000d66:	428c      	cmp	r4, r1
 8000d68:	684b      	ldr	r3, [r1, #4]
 8000d6a:	bf16      	itet	ne
 8000d6c:	6063      	strne	r3, [r4, #4]
 8000d6e:	6013      	streq	r3, [r2, #0]
 8000d70:	460c      	movne	r4, r1
 8000d72:	e7eb      	b.n	8000d4c <_malloc_r+0x64>
 8000d74:	460c      	mov	r4, r1
 8000d76:	6849      	ldr	r1, [r1, #4]
 8000d78:	e7cc      	b.n	8000d14 <_malloc_r+0x2c>
 8000d7a:	1cc4      	adds	r4, r0, #3
 8000d7c:	f024 0403 	bic.w	r4, r4, #3
 8000d80:	42a0      	cmp	r0, r4
 8000d82:	d005      	beq.n	8000d90 <_malloc_r+0xa8>
 8000d84:	1a21      	subs	r1, r4, r0
 8000d86:	4630      	mov	r0, r6
 8000d88:	f000 fad0 	bl	800132c <_sbrk_r>
 8000d8c:	3001      	adds	r0, #1
 8000d8e:	d0cf      	beq.n	8000d30 <_malloc_r+0x48>
 8000d90:	6025      	str	r5, [r4, #0]
 8000d92:	e7db      	b.n	8000d4c <_malloc_r+0x64>
 8000d94:	2000008c 	.word	0x2000008c
 8000d98:	20000090 	.word	0x20000090

08000d9c <__sfputc_r>:
 8000d9c:	6893      	ldr	r3, [r2, #8]
 8000d9e:	3b01      	subs	r3, #1
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	b410      	push	{r4}
 8000da4:	6093      	str	r3, [r2, #8]
 8000da6:	da08      	bge.n	8000dba <__sfputc_r+0x1e>
 8000da8:	6994      	ldr	r4, [r2, #24]
 8000daa:	42a3      	cmp	r3, r4
 8000dac:	db01      	blt.n	8000db2 <__sfputc_r+0x16>
 8000dae:	290a      	cmp	r1, #10
 8000db0:	d103      	bne.n	8000dba <__sfputc_r+0x1e>
 8000db2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000db6:	f7ff bcab 	b.w	8000710 <__swbuf_r>
 8000dba:	6813      	ldr	r3, [r2, #0]
 8000dbc:	1c58      	adds	r0, r3, #1
 8000dbe:	6010      	str	r0, [r2, #0]
 8000dc0:	7019      	strb	r1, [r3, #0]
 8000dc2:	4608      	mov	r0, r1
 8000dc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dc8:	4770      	bx	lr

08000dca <__sfputs_r>:
 8000dca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dcc:	4606      	mov	r6, r0
 8000dce:	460f      	mov	r7, r1
 8000dd0:	4614      	mov	r4, r2
 8000dd2:	18d5      	adds	r5, r2, r3
 8000dd4:	42ac      	cmp	r4, r5
 8000dd6:	d101      	bne.n	8000ddc <__sfputs_r+0x12>
 8000dd8:	2000      	movs	r0, #0
 8000dda:	e007      	b.n	8000dec <__sfputs_r+0x22>
 8000ddc:	463a      	mov	r2, r7
 8000dde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000de2:	4630      	mov	r0, r6
 8000de4:	f7ff ffda 	bl	8000d9c <__sfputc_r>
 8000de8:	1c43      	adds	r3, r0, #1
 8000dea:	d1f3      	bne.n	8000dd4 <__sfputs_r+0xa>
 8000dec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000df0 <_vfiprintf_r>:
 8000df0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000df4:	460c      	mov	r4, r1
 8000df6:	b09d      	sub	sp, #116	; 0x74
 8000df8:	4617      	mov	r7, r2
 8000dfa:	461d      	mov	r5, r3
 8000dfc:	4606      	mov	r6, r0
 8000dfe:	b118      	cbz	r0, 8000e08 <_vfiprintf_r+0x18>
 8000e00:	6983      	ldr	r3, [r0, #24]
 8000e02:	b90b      	cbnz	r3, 8000e08 <_vfiprintf_r+0x18>
 8000e04:	f7ff fe34 	bl	8000a70 <__sinit>
 8000e08:	4b7c      	ldr	r3, [pc, #496]	; (8000ffc <_vfiprintf_r+0x20c>)
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	d158      	bne.n	8000ec0 <_vfiprintf_r+0xd0>
 8000e0e:	6874      	ldr	r4, [r6, #4]
 8000e10:	89a3      	ldrh	r3, [r4, #12]
 8000e12:	0718      	lsls	r0, r3, #28
 8000e14:	d55e      	bpl.n	8000ed4 <_vfiprintf_r+0xe4>
 8000e16:	6923      	ldr	r3, [r4, #16]
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	d05b      	beq.n	8000ed4 <_vfiprintf_r+0xe4>
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	9309      	str	r3, [sp, #36]	; 0x24
 8000e20:	2320      	movs	r3, #32
 8000e22:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000e26:	2330      	movs	r3, #48	; 0x30
 8000e28:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000e2c:	9503      	str	r5, [sp, #12]
 8000e2e:	f04f 0b01 	mov.w	fp, #1
 8000e32:	46b8      	mov	r8, r7
 8000e34:	4645      	mov	r5, r8
 8000e36:	f815 3b01 	ldrb.w	r3, [r5], #1
 8000e3a:	b10b      	cbz	r3, 8000e40 <_vfiprintf_r+0x50>
 8000e3c:	2b25      	cmp	r3, #37	; 0x25
 8000e3e:	d154      	bne.n	8000eea <_vfiprintf_r+0xfa>
 8000e40:	ebb8 0a07 	subs.w	sl, r8, r7
 8000e44:	d00b      	beq.n	8000e5e <_vfiprintf_r+0x6e>
 8000e46:	4653      	mov	r3, sl
 8000e48:	463a      	mov	r2, r7
 8000e4a:	4621      	mov	r1, r4
 8000e4c:	4630      	mov	r0, r6
 8000e4e:	f7ff ffbc 	bl	8000dca <__sfputs_r>
 8000e52:	3001      	adds	r0, #1
 8000e54:	f000 80c2 	beq.w	8000fdc <_vfiprintf_r+0x1ec>
 8000e58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000e5a:	4453      	add	r3, sl
 8000e5c:	9309      	str	r3, [sp, #36]	; 0x24
 8000e5e:	f898 3000 	ldrb.w	r3, [r8]
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	f000 80ba 	beq.w	8000fdc <_vfiprintf_r+0x1ec>
 8000e68:	2300      	movs	r3, #0
 8000e6a:	f04f 32ff 	mov.w	r2, #4294967295
 8000e6e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e72:	9304      	str	r3, [sp, #16]
 8000e74:	9307      	str	r3, [sp, #28]
 8000e76:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e7a:	931a      	str	r3, [sp, #104]	; 0x68
 8000e7c:	46a8      	mov	r8, r5
 8000e7e:	2205      	movs	r2, #5
 8000e80:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000e84:	485e      	ldr	r0, [pc, #376]	; (8001000 <_vfiprintf_r+0x210>)
 8000e86:	f7ff f9bb 	bl	8000200 <memchr>
 8000e8a:	9b04      	ldr	r3, [sp, #16]
 8000e8c:	bb78      	cbnz	r0, 8000eee <_vfiprintf_r+0xfe>
 8000e8e:	06d9      	lsls	r1, r3, #27
 8000e90:	bf44      	itt	mi
 8000e92:	2220      	movmi	r2, #32
 8000e94:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000e98:	071a      	lsls	r2, r3, #28
 8000e9a:	bf44      	itt	mi
 8000e9c:	222b      	movmi	r2, #43	; 0x2b
 8000e9e:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000ea2:	782a      	ldrb	r2, [r5, #0]
 8000ea4:	2a2a      	cmp	r2, #42	; 0x2a
 8000ea6:	d02a      	beq.n	8000efe <_vfiprintf_r+0x10e>
 8000ea8:	9a07      	ldr	r2, [sp, #28]
 8000eaa:	46a8      	mov	r8, r5
 8000eac:	2000      	movs	r0, #0
 8000eae:	250a      	movs	r5, #10
 8000eb0:	4641      	mov	r1, r8
 8000eb2:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000eb6:	3b30      	subs	r3, #48	; 0x30
 8000eb8:	2b09      	cmp	r3, #9
 8000eba:	d969      	bls.n	8000f90 <_vfiprintf_r+0x1a0>
 8000ebc:	b360      	cbz	r0, 8000f18 <_vfiprintf_r+0x128>
 8000ebe:	e024      	b.n	8000f0a <_vfiprintf_r+0x11a>
 8000ec0:	4b50      	ldr	r3, [pc, #320]	; (8001004 <_vfiprintf_r+0x214>)
 8000ec2:	429c      	cmp	r4, r3
 8000ec4:	d101      	bne.n	8000eca <_vfiprintf_r+0xda>
 8000ec6:	68b4      	ldr	r4, [r6, #8]
 8000ec8:	e7a2      	b.n	8000e10 <_vfiprintf_r+0x20>
 8000eca:	4b4f      	ldr	r3, [pc, #316]	; (8001008 <_vfiprintf_r+0x218>)
 8000ecc:	429c      	cmp	r4, r3
 8000ece:	bf08      	it	eq
 8000ed0:	68f4      	ldreq	r4, [r6, #12]
 8000ed2:	e79d      	b.n	8000e10 <_vfiprintf_r+0x20>
 8000ed4:	4621      	mov	r1, r4
 8000ed6:	4630      	mov	r0, r6
 8000ed8:	f7ff fc6c 	bl	80007b4 <__swsetup_r>
 8000edc:	2800      	cmp	r0, #0
 8000ede:	d09d      	beq.n	8000e1c <_vfiprintf_r+0x2c>
 8000ee0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ee4:	b01d      	add	sp, #116	; 0x74
 8000ee6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000eea:	46a8      	mov	r8, r5
 8000eec:	e7a2      	b.n	8000e34 <_vfiprintf_r+0x44>
 8000eee:	4a44      	ldr	r2, [pc, #272]	; (8001000 <_vfiprintf_r+0x210>)
 8000ef0:	1a80      	subs	r0, r0, r2
 8000ef2:	fa0b f000 	lsl.w	r0, fp, r0
 8000ef6:	4318      	orrs	r0, r3
 8000ef8:	9004      	str	r0, [sp, #16]
 8000efa:	4645      	mov	r5, r8
 8000efc:	e7be      	b.n	8000e7c <_vfiprintf_r+0x8c>
 8000efe:	9a03      	ldr	r2, [sp, #12]
 8000f00:	1d11      	adds	r1, r2, #4
 8000f02:	6812      	ldr	r2, [r2, #0]
 8000f04:	9103      	str	r1, [sp, #12]
 8000f06:	2a00      	cmp	r2, #0
 8000f08:	db01      	blt.n	8000f0e <_vfiprintf_r+0x11e>
 8000f0a:	9207      	str	r2, [sp, #28]
 8000f0c:	e004      	b.n	8000f18 <_vfiprintf_r+0x128>
 8000f0e:	4252      	negs	r2, r2
 8000f10:	f043 0302 	orr.w	r3, r3, #2
 8000f14:	9207      	str	r2, [sp, #28]
 8000f16:	9304      	str	r3, [sp, #16]
 8000f18:	f898 3000 	ldrb.w	r3, [r8]
 8000f1c:	2b2e      	cmp	r3, #46	; 0x2e
 8000f1e:	d10e      	bne.n	8000f3e <_vfiprintf_r+0x14e>
 8000f20:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000f24:	2b2a      	cmp	r3, #42	; 0x2a
 8000f26:	d138      	bne.n	8000f9a <_vfiprintf_r+0x1aa>
 8000f28:	9b03      	ldr	r3, [sp, #12]
 8000f2a:	1d1a      	adds	r2, r3, #4
 8000f2c:	681b      	ldr	r3, [r3, #0]
 8000f2e:	9203      	str	r2, [sp, #12]
 8000f30:	2b00      	cmp	r3, #0
 8000f32:	bfb8      	it	lt
 8000f34:	f04f 33ff 	movlt.w	r3, #4294967295
 8000f38:	f108 0802 	add.w	r8, r8, #2
 8000f3c:	9305      	str	r3, [sp, #20]
 8000f3e:	4d33      	ldr	r5, [pc, #204]	; (800100c <_vfiprintf_r+0x21c>)
 8000f40:	f898 1000 	ldrb.w	r1, [r8]
 8000f44:	2203      	movs	r2, #3
 8000f46:	4628      	mov	r0, r5
 8000f48:	f7ff f95a 	bl	8000200 <memchr>
 8000f4c:	b140      	cbz	r0, 8000f60 <_vfiprintf_r+0x170>
 8000f4e:	2340      	movs	r3, #64	; 0x40
 8000f50:	1b40      	subs	r0, r0, r5
 8000f52:	fa03 f000 	lsl.w	r0, r3, r0
 8000f56:	9b04      	ldr	r3, [sp, #16]
 8000f58:	4303      	orrs	r3, r0
 8000f5a:	f108 0801 	add.w	r8, r8, #1
 8000f5e:	9304      	str	r3, [sp, #16]
 8000f60:	f898 1000 	ldrb.w	r1, [r8]
 8000f64:	482a      	ldr	r0, [pc, #168]	; (8001010 <_vfiprintf_r+0x220>)
 8000f66:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000f6a:	2206      	movs	r2, #6
 8000f6c:	f108 0701 	add.w	r7, r8, #1
 8000f70:	f7ff f946 	bl	8000200 <memchr>
 8000f74:	2800      	cmp	r0, #0
 8000f76:	d037      	beq.n	8000fe8 <_vfiprintf_r+0x1f8>
 8000f78:	4b26      	ldr	r3, [pc, #152]	; (8001014 <_vfiprintf_r+0x224>)
 8000f7a:	bb1b      	cbnz	r3, 8000fc4 <_vfiprintf_r+0x1d4>
 8000f7c:	9b03      	ldr	r3, [sp, #12]
 8000f7e:	3307      	adds	r3, #7
 8000f80:	f023 0307 	bic.w	r3, r3, #7
 8000f84:	3308      	adds	r3, #8
 8000f86:	9303      	str	r3, [sp, #12]
 8000f88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f8a:	444b      	add	r3, r9
 8000f8c:	9309      	str	r3, [sp, #36]	; 0x24
 8000f8e:	e750      	b.n	8000e32 <_vfiprintf_r+0x42>
 8000f90:	fb05 3202 	mla	r2, r5, r2, r3
 8000f94:	2001      	movs	r0, #1
 8000f96:	4688      	mov	r8, r1
 8000f98:	e78a      	b.n	8000eb0 <_vfiprintf_r+0xc0>
 8000f9a:	2300      	movs	r3, #0
 8000f9c:	f108 0801 	add.w	r8, r8, #1
 8000fa0:	9305      	str	r3, [sp, #20]
 8000fa2:	4619      	mov	r1, r3
 8000fa4:	250a      	movs	r5, #10
 8000fa6:	4640      	mov	r0, r8
 8000fa8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fac:	3a30      	subs	r2, #48	; 0x30
 8000fae:	2a09      	cmp	r2, #9
 8000fb0:	d903      	bls.n	8000fba <_vfiprintf_r+0x1ca>
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d0c3      	beq.n	8000f3e <_vfiprintf_r+0x14e>
 8000fb6:	9105      	str	r1, [sp, #20]
 8000fb8:	e7c1      	b.n	8000f3e <_vfiprintf_r+0x14e>
 8000fba:	fb05 2101 	mla	r1, r5, r1, r2
 8000fbe:	2301      	movs	r3, #1
 8000fc0:	4680      	mov	r8, r0
 8000fc2:	e7f0      	b.n	8000fa6 <_vfiprintf_r+0x1b6>
 8000fc4:	ab03      	add	r3, sp, #12
 8000fc6:	9300      	str	r3, [sp, #0]
 8000fc8:	4622      	mov	r2, r4
 8000fca:	4b13      	ldr	r3, [pc, #76]	; (8001018 <_vfiprintf_r+0x228>)
 8000fcc:	a904      	add	r1, sp, #16
 8000fce:	4630      	mov	r0, r6
 8000fd0:	f3af 8000 	nop.w
 8000fd4:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000fd8:	4681      	mov	r9, r0
 8000fda:	d1d5      	bne.n	8000f88 <_vfiprintf_r+0x198>
 8000fdc:	89a3      	ldrh	r3, [r4, #12]
 8000fde:	065b      	lsls	r3, r3, #25
 8000fe0:	f53f af7e 	bmi.w	8000ee0 <_vfiprintf_r+0xf0>
 8000fe4:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000fe6:	e77d      	b.n	8000ee4 <_vfiprintf_r+0xf4>
 8000fe8:	ab03      	add	r3, sp, #12
 8000fea:	9300      	str	r3, [sp, #0]
 8000fec:	4622      	mov	r2, r4
 8000fee:	4b0a      	ldr	r3, [pc, #40]	; (8001018 <_vfiprintf_r+0x228>)
 8000ff0:	a904      	add	r1, sp, #16
 8000ff2:	4630      	mov	r0, r6
 8000ff4:	f000 f888 	bl	8001108 <_printf_i>
 8000ff8:	e7ec      	b.n	8000fd4 <_vfiprintf_r+0x1e4>
 8000ffa:	bf00      	nop
 8000ffc:	0800157c 	.word	0x0800157c
 8001000:	080015bc 	.word	0x080015bc
 8001004:	0800159c 	.word	0x0800159c
 8001008:	0800155c 	.word	0x0800155c
 800100c:	080015c2 	.word	0x080015c2
 8001010:	080015c6 	.word	0x080015c6
 8001014:	00000000 	.word	0x00000000
 8001018:	08000dcb 	.word	0x08000dcb

0800101c <_printf_common>:
 800101c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001020:	4691      	mov	r9, r2
 8001022:	461f      	mov	r7, r3
 8001024:	688a      	ldr	r2, [r1, #8]
 8001026:	690b      	ldr	r3, [r1, #16]
 8001028:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800102c:	4293      	cmp	r3, r2
 800102e:	bfb8      	it	lt
 8001030:	4613      	movlt	r3, r2
 8001032:	f8c9 3000 	str.w	r3, [r9]
 8001036:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800103a:	4606      	mov	r6, r0
 800103c:	460c      	mov	r4, r1
 800103e:	b112      	cbz	r2, 8001046 <_printf_common+0x2a>
 8001040:	3301      	adds	r3, #1
 8001042:	f8c9 3000 	str.w	r3, [r9]
 8001046:	6823      	ldr	r3, [r4, #0]
 8001048:	0699      	lsls	r1, r3, #26
 800104a:	bf42      	ittt	mi
 800104c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8001050:	3302      	addmi	r3, #2
 8001052:	f8c9 3000 	strmi.w	r3, [r9]
 8001056:	6825      	ldr	r5, [r4, #0]
 8001058:	f015 0506 	ands.w	r5, r5, #6
 800105c:	d107      	bne.n	800106e <_printf_common+0x52>
 800105e:	f104 0a19 	add.w	sl, r4, #25
 8001062:	68e3      	ldr	r3, [r4, #12]
 8001064:	f8d9 2000 	ldr.w	r2, [r9]
 8001068:	1a9b      	subs	r3, r3, r2
 800106a:	42ab      	cmp	r3, r5
 800106c:	dc28      	bgt.n	80010c0 <_printf_common+0xa4>
 800106e:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8001072:	6822      	ldr	r2, [r4, #0]
 8001074:	3300      	adds	r3, #0
 8001076:	bf18      	it	ne
 8001078:	2301      	movne	r3, #1
 800107a:	0692      	lsls	r2, r2, #26
 800107c:	d42d      	bmi.n	80010da <_printf_common+0xbe>
 800107e:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001082:	4639      	mov	r1, r7
 8001084:	4630      	mov	r0, r6
 8001086:	47c0      	blx	r8
 8001088:	3001      	adds	r0, #1
 800108a:	d020      	beq.n	80010ce <_printf_common+0xb2>
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	68e5      	ldr	r5, [r4, #12]
 8001090:	f8d9 2000 	ldr.w	r2, [r9]
 8001094:	f003 0306 	and.w	r3, r3, #6
 8001098:	2b04      	cmp	r3, #4
 800109a:	bf08      	it	eq
 800109c:	1aad      	subeq	r5, r5, r2
 800109e:	68a3      	ldr	r3, [r4, #8]
 80010a0:	6922      	ldr	r2, [r4, #16]
 80010a2:	bf0c      	ite	eq
 80010a4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010a8:	2500      	movne	r5, #0
 80010aa:	4293      	cmp	r3, r2
 80010ac:	bfc4      	itt	gt
 80010ae:	1a9b      	subgt	r3, r3, r2
 80010b0:	18ed      	addgt	r5, r5, r3
 80010b2:	f04f 0900 	mov.w	r9, #0
 80010b6:	341a      	adds	r4, #26
 80010b8:	454d      	cmp	r5, r9
 80010ba:	d11a      	bne.n	80010f2 <_printf_common+0xd6>
 80010bc:	2000      	movs	r0, #0
 80010be:	e008      	b.n	80010d2 <_printf_common+0xb6>
 80010c0:	2301      	movs	r3, #1
 80010c2:	4652      	mov	r2, sl
 80010c4:	4639      	mov	r1, r7
 80010c6:	4630      	mov	r0, r6
 80010c8:	47c0      	blx	r8
 80010ca:	3001      	adds	r0, #1
 80010cc:	d103      	bne.n	80010d6 <_printf_common+0xba>
 80010ce:	f04f 30ff 	mov.w	r0, #4294967295
 80010d2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010d6:	3501      	adds	r5, #1
 80010d8:	e7c3      	b.n	8001062 <_printf_common+0x46>
 80010da:	18e1      	adds	r1, r4, r3
 80010dc:	1c5a      	adds	r2, r3, #1
 80010de:	2030      	movs	r0, #48	; 0x30
 80010e0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80010e4:	4422      	add	r2, r4
 80010e6:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80010ea:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80010ee:	3302      	adds	r3, #2
 80010f0:	e7c5      	b.n	800107e <_printf_common+0x62>
 80010f2:	2301      	movs	r3, #1
 80010f4:	4622      	mov	r2, r4
 80010f6:	4639      	mov	r1, r7
 80010f8:	4630      	mov	r0, r6
 80010fa:	47c0      	blx	r8
 80010fc:	3001      	adds	r0, #1
 80010fe:	d0e6      	beq.n	80010ce <_printf_common+0xb2>
 8001100:	f109 0901 	add.w	r9, r9, #1
 8001104:	e7d8      	b.n	80010b8 <_printf_common+0x9c>
	...

08001108 <_printf_i>:
 8001108:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800110c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8001110:	460c      	mov	r4, r1
 8001112:	7e09      	ldrb	r1, [r1, #24]
 8001114:	b085      	sub	sp, #20
 8001116:	296e      	cmp	r1, #110	; 0x6e
 8001118:	4617      	mov	r7, r2
 800111a:	4606      	mov	r6, r0
 800111c:	4698      	mov	r8, r3
 800111e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8001120:	f000 80b3 	beq.w	800128a <_printf_i+0x182>
 8001124:	d822      	bhi.n	800116c <_printf_i+0x64>
 8001126:	2963      	cmp	r1, #99	; 0x63
 8001128:	d036      	beq.n	8001198 <_printf_i+0x90>
 800112a:	d80a      	bhi.n	8001142 <_printf_i+0x3a>
 800112c:	2900      	cmp	r1, #0
 800112e:	f000 80b9 	beq.w	80012a4 <_printf_i+0x19c>
 8001132:	2958      	cmp	r1, #88	; 0x58
 8001134:	f000 8083 	beq.w	800123e <_printf_i+0x136>
 8001138:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800113c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8001140:	e032      	b.n	80011a8 <_printf_i+0xa0>
 8001142:	2964      	cmp	r1, #100	; 0x64
 8001144:	d001      	beq.n	800114a <_printf_i+0x42>
 8001146:	2969      	cmp	r1, #105	; 0x69
 8001148:	d1f6      	bne.n	8001138 <_printf_i+0x30>
 800114a:	6820      	ldr	r0, [r4, #0]
 800114c:	6813      	ldr	r3, [r2, #0]
 800114e:	0605      	lsls	r5, r0, #24
 8001150:	f103 0104 	add.w	r1, r3, #4
 8001154:	d52a      	bpl.n	80011ac <_printf_i+0xa4>
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	6011      	str	r1, [r2, #0]
 800115a:	2b00      	cmp	r3, #0
 800115c:	da03      	bge.n	8001166 <_printf_i+0x5e>
 800115e:	222d      	movs	r2, #45	; 0x2d
 8001160:	425b      	negs	r3, r3
 8001162:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8001166:	486f      	ldr	r0, [pc, #444]	; (8001324 <_printf_i+0x21c>)
 8001168:	220a      	movs	r2, #10
 800116a:	e039      	b.n	80011e0 <_printf_i+0xd8>
 800116c:	2973      	cmp	r1, #115	; 0x73
 800116e:	f000 809d 	beq.w	80012ac <_printf_i+0x1a4>
 8001172:	d808      	bhi.n	8001186 <_printf_i+0x7e>
 8001174:	296f      	cmp	r1, #111	; 0x6f
 8001176:	d020      	beq.n	80011ba <_printf_i+0xb2>
 8001178:	2970      	cmp	r1, #112	; 0x70
 800117a:	d1dd      	bne.n	8001138 <_printf_i+0x30>
 800117c:	6823      	ldr	r3, [r4, #0]
 800117e:	f043 0320 	orr.w	r3, r3, #32
 8001182:	6023      	str	r3, [r4, #0]
 8001184:	e003      	b.n	800118e <_printf_i+0x86>
 8001186:	2975      	cmp	r1, #117	; 0x75
 8001188:	d017      	beq.n	80011ba <_printf_i+0xb2>
 800118a:	2978      	cmp	r1, #120	; 0x78
 800118c:	d1d4      	bne.n	8001138 <_printf_i+0x30>
 800118e:	2378      	movs	r3, #120	; 0x78
 8001190:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001194:	4864      	ldr	r0, [pc, #400]	; (8001328 <_printf_i+0x220>)
 8001196:	e055      	b.n	8001244 <_printf_i+0x13c>
 8001198:	6813      	ldr	r3, [r2, #0]
 800119a:	1d19      	adds	r1, r3, #4
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	6011      	str	r1, [r2, #0]
 80011a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80011a8:	2301      	movs	r3, #1
 80011aa:	e08c      	b.n	80012c6 <_printf_i+0x1be>
 80011ac:	681b      	ldr	r3, [r3, #0]
 80011ae:	6011      	str	r1, [r2, #0]
 80011b0:	f010 0f40 	tst.w	r0, #64	; 0x40
 80011b4:	bf18      	it	ne
 80011b6:	b21b      	sxthne	r3, r3
 80011b8:	e7cf      	b.n	800115a <_printf_i+0x52>
 80011ba:	6813      	ldr	r3, [r2, #0]
 80011bc:	6825      	ldr	r5, [r4, #0]
 80011be:	1d18      	adds	r0, r3, #4
 80011c0:	6010      	str	r0, [r2, #0]
 80011c2:	0628      	lsls	r0, r5, #24
 80011c4:	d501      	bpl.n	80011ca <_printf_i+0xc2>
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	e002      	b.n	80011d0 <_printf_i+0xc8>
 80011ca:	0668      	lsls	r0, r5, #25
 80011cc:	d5fb      	bpl.n	80011c6 <_printf_i+0xbe>
 80011ce:	881b      	ldrh	r3, [r3, #0]
 80011d0:	4854      	ldr	r0, [pc, #336]	; (8001324 <_printf_i+0x21c>)
 80011d2:	296f      	cmp	r1, #111	; 0x6f
 80011d4:	bf14      	ite	ne
 80011d6:	220a      	movne	r2, #10
 80011d8:	2208      	moveq	r2, #8
 80011da:	2100      	movs	r1, #0
 80011dc:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80011e0:	6865      	ldr	r5, [r4, #4]
 80011e2:	60a5      	str	r5, [r4, #8]
 80011e4:	2d00      	cmp	r5, #0
 80011e6:	f2c0 8095 	blt.w	8001314 <_printf_i+0x20c>
 80011ea:	6821      	ldr	r1, [r4, #0]
 80011ec:	f021 0104 	bic.w	r1, r1, #4
 80011f0:	6021      	str	r1, [r4, #0]
 80011f2:	2b00      	cmp	r3, #0
 80011f4:	d13d      	bne.n	8001272 <_printf_i+0x16a>
 80011f6:	2d00      	cmp	r5, #0
 80011f8:	f040 808e 	bne.w	8001318 <_printf_i+0x210>
 80011fc:	4665      	mov	r5, ip
 80011fe:	2a08      	cmp	r2, #8
 8001200:	d10b      	bne.n	800121a <_printf_i+0x112>
 8001202:	6823      	ldr	r3, [r4, #0]
 8001204:	07db      	lsls	r3, r3, #31
 8001206:	d508      	bpl.n	800121a <_printf_i+0x112>
 8001208:	6923      	ldr	r3, [r4, #16]
 800120a:	6862      	ldr	r2, [r4, #4]
 800120c:	429a      	cmp	r2, r3
 800120e:	bfde      	ittt	le
 8001210:	2330      	movle	r3, #48	; 0x30
 8001212:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001216:	f105 35ff 	addle.w	r5, r5, #4294967295
 800121a:	ebac 0305 	sub.w	r3, ip, r5
 800121e:	6123      	str	r3, [r4, #16]
 8001220:	f8cd 8000 	str.w	r8, [sp]
 8001224:	463b      	mov	r3, r7
 8001226:	aa03      	add	r2, sp, #12
 8001228:	4621      	mov	r1, r4
 800122a:	4630      	mov	r0, r6
 800122c:	f7ff fef6 	bl	800101c <_printf_common>
 8001230:	3001      	adds	r0, #1
 8001232:	d14d      	bne.n	80012d0 <_printf_i+0x1c8>
 8001234:	f04f 30ff 	mov.w	r0, #4294967295
 8001238:	b005      	add	sp, #20
 800123a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800123e:	4839      	ldr	r0, [pc, #228]	; (8001324 <_printf_i+0x21c>)
 8001240:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8001244:	6813      	ldr	r3, [r2, #0]
 8001246:	6821      	ldr	r1, [r4, #0]
 8001248:	1d1d      	adds	r5, r3, #4
 800124a:	681b      	ldr	r3, [r3, #0]
 800124c:	6015      	str	r5, [r2, #0]
 800124e:	060a      	lsls	r2, r1, #24
 8001250:	d50b      	bpl.n	800126a <_printf_i+0x162>
 8001252:	07ca      	lsls	r2, r1, #31
 8001254:	bf44      	itt	mi
 8001256:	f041 0120 	orrmi.w	r1, r1, #32
 800125a:	6021      	strmi	r1, [r4, #0]
 800125c:	b91b      	cbnz	r3, 8001266 <_printf_i+0x15e>
 800125e:	6822      	ldr	r2, [r4, #0]
 8001260:	f022 0220 	bic.w	r2, r2, #32
 8001264:	6022      	str	r2, [r4, #0]
 8001266:	2210      	movs	r2, #16
 8001268:	e7b7      	b.n	80011da <_printf_i+0xd2>
 800126a:	064d      	lsls	r5, r1, #25
 800126c:	bf48      	it	mi
 800126e:	b29b      	uxthmi	r3, r3
 8001270:	e7ef      	b.n	8001252 <_printf_i+0x14a>
 8001272:	4665      	mov	r5, ip
 8001274:	fbb3 f1f2 	udiv	r1, r3, r2
 8001278:	fb02 3311 	mls	r3, r2, r1, r3
 800127c:	5cc3      	ldrb	r3, [r0, r3]
 800127e:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8001282:	460b      	mov	r3, r1
 8001284:	2900      	cmp	r1, #0
 8001286:	d1f5      	bne.n	8001274 <_printf_i+0x16c>
 8001288:	e7b9      	b.n	80011fe <_printf_i+0xf6>
 800128a:	6813      	ldr	r3, [r2, #0]
 800128c:	6825      	ldr	r5, [r4, #0]
 800128e:	6961      	ldr	r1, [r4, #20]
 8001290:	1d18      	adds	r0, r3, #4
 8001292:	6010      	str	r0, [r2, #0]
 8001294:	0628      	lsls	r0, r5, #24
 8001296:	681b      	ldr	r3, [r3, #0]
 8001298:	d501      	bpl.n	800129e <_printf_i+0x196>
 800129a:	6019      	str	r1, [r3, #0]
 800129c:	e002      	b.n	80012a4 <_printf_i+0x19c>
 800129e:	066a      	lsls	r2, r5, #25
 80012a0:	d5fb      	bpl.n	800129a <_printf_i+0x192>
 80012a2:	8019      	strh	r1, [r3, #0]
 80012a4:	2300      	movs	r3, #0
 80012a6:	6123      	str	r3, [r4, #16]
 80012a8:	4665      	mov	r5, ip
 80012aa:	e7b9      	b.n	8001220 <_printf_i+0x118>
 80012ac:	6813      	ldr	r3, [r2, #0]
 80012ae:	1d19      	adds	r1, r3, #4
 80012b0:	6011      	str	r1, [r2, #0]
 80012b2:	681d      	ldr	r5, [r3, #0]
 80012b4:	6862      	ldr	r2, [r4, #4]
 80012b6:	2100      	movs	r1, #0
 80012b8:	4628      	mov	r0, r5
 80012ba:	f7fe ffa1 	bl	8000200 <memchr>
 80012be:	b108      	cbz	r0, 80012c4 <_printf_i+0x1bc>
 80012c0:	1b40      	subs	r0, r0, r5
 80012c2:	6060      	str	r0, [r4, #4]
 80012c4:	6863      	ldr	r3, [r4, #4]
 80012c6:	6123      	str	r3, [r4, #16]
 80012c8:	2300      	movs	r3, #0
 80012ca:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80012ce:	e7a7      	b.n	8001220 <_printf_i+0x118>
 80012d0:	6923      	ldr	r3, [r4, #16]
 80012d2:	462a      	mov	r2, r5
 80012d4:	4639      	mov	r1, r7
 80012d6:	4630      	mov	r0, r6
 80012d8:	47c0      	blx	r8
 80012da:	3001      	adds	r0, #1
 80012dc:	d0aa      	beq.n	8001234 <_printf_i+0x12c>
 80012de:	6823      	ldr	r3, [r4, #0]
 80012e0:	079b      	lsls	r3, r3, #30
 80012e2:	d413      	bmi.n	800130c <_printf_i+0x204>
 80012e4:	68e0      	ldr	r0, [r4, #12]
 80012e6:	9b03      	ldr	r3, [sp, #12]
 80012e8:	4298      	cmp	r0, r3
 80012ea:	bfb8      	it	lt
 80012ec:	4618      	movlt	r0, r3
 80012ee:	e7a3      	b.n	8001238 <_printf_i+0x130>
 80012f0:	2301      	movs	r3, #1
 80012f2:	464a      	mov	r2, r9
 80012f4:	4639      	mov	r1, r7
 80012f6:	4630      	mov	r0, r6
 80012f8:	47c0      	blx	r8
 80012fa:	3001      	adds	r0, #1
 80012fc:	d09a      	beq.n	8001234 <_printf_i+0x12c>
 80012fe:	3501      	adds	r5, #1
 8001300:	68e3      	ldr	r3, [r4, #12]
 8001302:	9a03      	ldr	r2, [sp, #12]
 8001304:	1a9b      	subs	r3, r3, r2
 8001306:	42ab      	cmp	r3, r5
 8001308:	dcf2      	bgt.n	80012f0 <_printf_i+0x1e8>
 800130a:	e7eb      	b.n	80012e4 <_printf_i+0x1dc>
 800130c:	2500      	movs	r5, #0
 800130e:	f104 0919 	add.w	r9, r4, #25
 8001312:	e7f5      	b.n	8001300 <_printf_i+0x1f8>
 8001314:	2b00      	cmp	r3, #0
 8001316:	d1ac      	bne.n	8001272 <_printf_i+0x16a>
 8001318:	7803      	ldrb	r3, [r0, #0]
 800131a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800131e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001322:	e76c      	b.n	80011fe <_printf_i+0xf6>
 8001324:	080015cd 	.word	0x080015cd
 8001328:	080015de 	.word	0x080015de

0800132c <_sbrk_r>:
 800132c:	b538      	push	{r3, r4, r5, lr}
 800132e:	4c06      	ldr	r4, [pc, #24]	; (8001348 <_sbrk_r+0x1c>)
 8001330:	2300      	movs	r3, #0
 8001332:	4605      	mov	r5, r0
 8001334:	4608      	mov	r0, r1
 8001336:	6023      	str	r3, [r4, #0]
 8001338:	f7ff f8e6 	bl	8000508 <_sbrk>
 800133c:	1c43      	adds	r3, r0, #1
 800133e:	d102      	bne.n	8001346 <_sbrk_r+0x1a>
 8001340:	6823      	ldr	r3, [r4, #0]
 8001342:	b103      	cbz	r3, 8001346 <_sbrk_r+0x1a>
 8001344:	602b      	str	r3, [r5, #0]
 8001346:	bd38      	pop	{r3, r4, r5, pc}
 8001348:	20000094 	.word	0x20000094

0800134c <__sread>:
 800134c:	b510      	push	{r4, lr}
 800134e:	460c      	mov	r4, r1
 8001350:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001354:	f000 f896 	bl	8001484 <_read_r>
 8001358:	2800      	cmp	r0, #0
 800135a:	bfab      	itete	ge
 800135c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800135e:	89a3      	ldrhlt	r3, [r4, #12]
 8001360:	181b      	addge	r3, r3, r0
 8001362:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001366:	bfac      	ite	ge
 8001368:	6563      	strge	r3, [r4, #84]	; 0x54
 800136a:	81a3      	strhlt	r3, [r4, #12]
 800136c:	bd10      	pop	{r4, pc}

0800136e <__swrite>:
 800136e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001372:	461f      	mov	r7, r3
 8001374:	898b      	ldrh	r3, [r1, #12]
 8001376:	05db      	lsls	r3, r3, #23
 8001378:	4605      	mov	r5, r0
 800137a:	460c      	mov	r4, r1
 800137c:	4616      	mov	r6, r2
 800137e:	d505      	bpl.n	800138c <__swrite+0x1e>
 8001380:	2302      	movs	r3, #2
 8001382:	2200      	movs	r2, #0
 8001384:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001388:	f000 f868 	bl	800145c <_lseek_r>
 800138c:	89a3      	ldrh	r3, [r4, #12]
 800138e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001392:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001396:	81a3      	strh	r3, [r4, #12]
 8001398:	4632      	mov	r2, r6
 800139a:	463b      	mov	r3, r7
 800139c:	4628      	mov	r0, r5
 800139e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80013a2:	f000 b817 	b.w	80013d4 <_write_r>

080013a6 <__sseek>:
 80013a6:	b510      	push	{r4, lr}
 80013a8:	460c      	mov	r4, r1
 80013aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ae:	f000 f855 	bl	800145c <_lseek_r>
 80013b2:	1c43      	adds	r3, r0, #1
 80013b4:	89a3      	ldrh	r3, [r4, #12]
 80013b6:	bf15      	itete	ne
 80013b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80013ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80013be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80013c2:	81a3      	strheq	r3, [r4, #12]
 80013c4:	bf18      	it	ne
 80013c6:	81a3      	strhne	r3, [r4, #12]
 80013c8:	bd10      	pop	{r4, pc}

080013ca <__sclose>:
 80013ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013ce:	f000 b813 	b.w	80013f8 <_close_r>
	...

080013d4 <_write_r>:
 80013d4:	b538      	push	{r3, r4, r5, lr}
 80013d6:	4c07      	ldr	r4, [pc, #28]	; (80013f4 <_write_r+0x20>)
 80013d8:	4605      	mov	r5, r0
 80013da:	4608      	mov	r0, r1
 80013dc:	4611      	mov	r1, r2
 80013de:	2200      	movs	r2, #0
 80013e0:	6022      	str	r2, [r4, #0]
 80013e2:	461a      	mov	r2, r3
 80013e4:	f7ff f83f 	bl	8000466 <_write>
 80013e8:	1c43      	adds	r3, r0, #1
 80013ea:	d102      	bne.n	80013f2 <_write_r+0x1e>
 80013ec:	6823      	ldr	r3, [r4, #0]
 80013ee:	b103      	cbz	r3, 80013f2 <_write_r+0x1e>
 80013f0:	602b      	str	r3, [r5, #0]
 80013f2:	bd38      	pop	{r3, r4, r5, pc}
 80013f4:	20000094 	.word	0x20000094

080013f8 <_close_r>:
 80013f8:	b538      	push	{r3, r4, r5, lr}
 80013fa:	4c06      	ldr	r4, [pc, #24]	; (8001414 <_close_r+0x1c>)
 80013fc:	2300      	movs	r3, #0
 80013fe:	4605      	mov	r5, r0
 8001400:	4608      	mov	r0, r1
 8001402:	6023      	str	r3, [r4, #0]
 8001404:	f7ff f84b 	bl	800049e <_close>
 8001408:	1c43      	adds	r3, r0, #1
 800140a:	d102      	bne.n	8001412 <_close_r+0x1a>
 800140c:	6823      	ldr	r3, [r4, #0]
 800140e:	b103      	cbz	r3, 8001412 <_close_r+0x1a>
 8001410:	602b      	str	r3, [r5, #0]
 8001412:	bd38      	pop	{r3, r4, r5, pc}
 8001414:	20000094 	.word	0x20000094

08001418 <_fstat_r>:
 8001418:	b538      	push	{r3, r4, r5, lr}
 800141a:	4c07      	ldr	r4, [pc, #28]	; (8001438 <_fstat_r+0x20>)
 800141c:	2300      	movs	r3, #0
 800141e:	4605      	mov	r5, r0
 8001420:	4608      	mov	r0, r1
 8001422:	4611      	mov	r1, r2
 8001424:	6023      	str	r3, [r4, #0]
 8001426:	f7ff f846 	bl	80004b6 <_fstat>
 800142a:	1c43      	adds	r3, r0, #1
 800142c:	d102      	bne.n	8001434 <_fstat_r+0x1c>
 800142e:	6823      	ldr	r3, [r4, #0]
 8001430:	b103      	cbz	r3, 8001434 <_fstat_r+0x1c>
 8001432:	602b      	str	r3, [r5, #0]
 8001434:	bd38      	pop	{r3, r4, r5, pc}
 8001436:	bf00      	nop
 8001438:	20000094 	.word	0x20000094

0800143c <_isatty_r>:
 800143c:	b538      	push	{r3, r4, r5, lr}
 800143e:	4c06      	ldr	r4, [pc, #24]	; (8001458 <_isatty_r+0x1c>)
 8001440:	2300      	movs	r3, #0
 8001442:	4605      	mov	r5, r0
 8001444:	4608      	mov	r0, r1
 8001446:	6023      	str	r3, [r4, #0]
 8001448:	f7ff f845 	bl	80004d6 <_isatty>
 800144c:	1c43      	adds	r3, r0, #1
 800144e:	d102      	bne.n	8001456 <_isatty_r+0x1a>
 8001450:	6823      	ldr	r3, [r4, #0]
 8001452:	b103      	cbz	r3, 8001456 <_isatty_r+0x1a>
 8001454:	602b      	str	r3, [r5, #0]
 8001456:	bd38      	pop	{r3, r4, r5, pc}
 8001458:	20000094 	.word	0x20000094

0800145c <_lseek_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4c07      	ldr	r4, [pc, #28]	; (800147c <_lseek_r+0x20>)
 8001460:	4605      	mov	r5, r0
 8001462:	4608      	mov	r0, r1
 8001464:	4611      	mov	r1, r2
 8001466:	2200      	movs	r2, #0
 8001468:	6022      	str	r2, [r4, #0]
 800146a:	461a      	mov	r2, r3
 800146c:	f7ff f83e 	bl	80004ec <_lseek>
 8001470:	1c43      	adds	r3, r0, #1
 8001472:	d102      	bne.n	800147a <_lseek_r+0x1e>
 8001474:	6823      	ldr	r3, [r4, #0]
 8001476:	b103      	cbz	r3, 800147a <_lseek_r+0x1e>
 8001478:	602b      	str	r3, [r5, #0]
 800147a:	bd38      	pop	{r3, r4, r5, pc}
 800147c:	20000094 	.word	0x20000094

08001480 <__malloc_lock>:
 8001480:	4770      	bx	lr

08001482 <__malloc_unlock>:
 8001482:	4770      	bx	lr

08001484 <_read_r>:
 8001484:	b538      	push	{r3, r4, r5, lr}
 8001486:	4c07      	ldr	r4, [pc, #28]	; (80014a4 <_read_r+0x20>)
 8001488:	4605      	mov	r5, r0
 800148a:	4608      	mov	r0, r1
 800148c:	4611      	mov	r1, r2
 800148e:	2200      	movs	r2, #0
 8001490:	6022      	str	r2, [r4, #0]
 8001492:	461a      	mov	r2, r3
 8001494:	f7fe ffca 	bl	800042c <_read>
 8001498:	1c43      	adds	r3, r0, #1
 800149a:	d102      	bne.n	80014a2 <_read_r+0x1e>
 800149c:	6823      	ldr	r3, [r4, #0]
 800149e:	b103      	cbz	r3, 80014a2 <_read_r+0x1e>
 80014a0:	602b      	str	r3, [r5, #0]
 80014a2:	bd38      	pop	{r3, r4, r5, pc}
 80014a4:	20000094 	.word	0x20000094

080014a8 <_init>:
 80014a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014aa:	bf00      	nop
 80014ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ae:	bc08      	pop	{r3}
 80014b0:	469e      	mov	lr, r3
 80014b2:	4770      	bx	lr

080014b4 <_fini>:
 80014b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b6:	bf00      	nop
 80014b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ba:	bc08      	pop	{r3}
 80014bc:	469e      	mov	lr, r3
 80014be:	4770      	bx	lr
