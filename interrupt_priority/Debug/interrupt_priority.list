
interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000c00  080001c0  080001c0  000101c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000090  08000dc0  08000dc0  00010dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000e50  08000e50  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08000e50  08000e50  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000e50  08000e50  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  08000e50  08000e50  00010e50  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08000e58  08000e58  00010e58  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08000e60  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000070  08000ed0  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200000a0  08000ed0  000200a0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002178  00000000  00000000  000200a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000601  00000000  00000000  00022218  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000128  00000000  00000000  00022820  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000f0  00000000  00000000  00022948  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002bb1  00000000  00000000  00022a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000012bb  00000000  00000000  000255e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090fb  00000000  00000000  000268a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f99f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000095c  00000000  00000000  0002fa1c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000070 	.word	0x20000070
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08000da8 	.word	0x08000da8

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000074 	.word	0x20000074
 80001fc:	08000da8 	.word	0x08000da8

08000200 <configure_priority_for_irqs>:
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100;
uint32_t *pNVIC_ISPRBase = (uint32_t*)0xE000E200;


void configure_priority_for_irqs(uint8_t irq_no, uint8_t priority_value)
{
 8000200:	b480      	push	{r7}
 8000202:	b087      	sub	sp, #28
 8000204:	af00      	add	r7, sp, #0
 8000206:	4603      	mov	r3, r0
 8000208:	460a      	mov	r2, r1
 800020a:	71fb      	strb	r3, [r7, #7]
 800020c:	4613      	mov	r3, r2
 800020e:	71bb      	strb	r3, [r7, #6]

	//1. find out iprx
	uint8_t iprx = irq_no / 4;
 8000210:	79fb      	ldrb	r3, [r7, #7]
 8000212:	089b      	lsrs	r3, r3, #2
 8000214:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr = pNVIC_IPRBase + iprx;
 8000216:	4b12      	ldr	r3, [pc, #72]	; (8000260 <configure_priority_for_irqs+0x60>)
 8000218:	681a      	ldr	r2, [r3, #0]
 800021a:	7dfb      	ldrb	r3, [r7, #23]
 800021c:	009b      	lsls	r3, r3, #2
 800021e:	4413      	add	r3, r2
 8000220:	613b      	str	r3, [r7, #16]

	//2.- Position in iprx
	uint8_t pos = (irq_no % 4) * 8;
 8000222:	79fb      	ldrb	r3, [r7, #7]
 8000224:	f003 0303 	and.w	r3, r3, #3
 8000228:	b2db      	uxtb	r3, r3
 800022a:	00db      	lsls	r3, r3, #3
 800022c:	73fb      	strb	r3, [r7, #15]

	//3. Configure the priority
	*ipr  &=  ~(0xFF << pos); // Clear the register
 800022e:	693b      	ldr	r3, [r7, #16]
 8000230:	681b      	ldr	r3, [r3, #0]
 8000232:	7bfa      	ldrb	r2, [r7, #15]
 8000234:	21ff      	movs	r1, #255	; 0xff
 8000236:	fa01 f202 	lsl.w	r2, r1, r2
 800023a:	43d2      	mvns	r2, r2
 800023c:	401a      	ands	r2, r3
 800023e:	693b      	ldr	r3, [r7, #16]
 8000240:	601a      	str	r2, [r3, #0]
	*ipr |= (priority_value << pos);
 8000242:	693b      	ldr	r3, [r7, #16]
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	79b9      	ldrb	r1, [r7, #6]
 8000248:	7bfa      	ldrb	r2, [r7, #15]
 800024a:	fa01 f202 	lsl.w	r2, r1, r2
 800024e:	431a      	orrs	r2, r3
 8000250:	693b      	ldr	r3, [r7, #16]
 8000252:	601a      	str	r2, [r3, #0]

}
 8000254:	bf00      	nop
 8000256:	371c      	adds	r7, #28
 8000258:	46bd      	mov	sp, r7
 800025a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025e:	4770      	bx	lr
 8000260:	20000000 	.word	0x20000000

08000264 <main>:

int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	//1.- Lets Configure the priority for the peripherals
	configure_priority_for_irqs(IRQNO_TIMER2, 0x60);
 8000268:	2160      	movs	r1, #96	; 0x60
 800026a:	201c      	movs	r0, #28
 800026c:	f7ff ffc8 	bl	8000200 <configure_priority_for_irqs>

	configure_priority_for_irqs(IRQNO_I2C1, 0x70);
 8000270:	2170      	movs	r1, #112	; 0x70
 8000272:	201f      	movs	r0, #31
 8000274:	f7ff ffc4 	bl	8000200 <configure_priority_for_irqs>

	//2.- Set the interrupt pending bit in the NVIC PR
	*pNVIC_ISPRBase |= (1  << IRQNO_TIMER2);
 8000278:	4b0c      	ldr	r3, [pc, #48]	; (80002ac <main+0x48>)
 800027a:	681b      	ldr	r3, [r3, #0]
 800027c:	681a      	ldr	r2, [r3, #0]
 800027e:	4b0b      	ldr	r3, [pc, #44]	; (80002ac <main+0x48>)
 8000280:	681b      	ldr	r3, [r3, #0]
 8000282:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000286:	601a      	str	r2, [r3, #0]


	//3. Enable the IRQs in NVIC ISER
	*pNVIC_ISERBase |= ( 1 << IRQNO_I2C1);
 8000288:	4b09      	ldr	r3, [pc, #36]	; (80002b0 <main+0x4c>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	681a      	ldr	r2, [r3, #0]
 800028e:	4b08      	ldr	r3, [pc, #32]	; (80002b0 <main+0x4c>)
 8000290:	681b      	ldr	r3, [r3, #0]
 8000292:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8000296:	601a      	str	r2, [r3, #0]
	*pNVIC_ISERBase |= ( 1 << IRQNO_TIMER2);
 8000298:	4b05      	ldr	r3, [pc, #20]	; (80002b0 <main+0x4c>)
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	681a      	ldr	r2, [r3, #0]
 800029e:	4b04      	ldr	r3, [pc, #16]	; (80002b0 <main+0x4c>)
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80002a6:	601a      	str	r2, [r3, #0]



	for(;;);
 80002a8:	e7fe      	b.n	80002a8 <main+0x44>
 80002aa:	bf00      	nop
 80002ac:	20000008 	.word	0x20000008
 80002b0:	20000004 	.word	0x20000004

080002b4 <TIM2_IRQHandler>:


//ISRS

void TIM2_IRQHandler(void)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0
	printf("[TIM2_IRQHandler] \n");
 80002b8:	4805      	ldr	r0, [pc, #20]	; (80002d0 <TIM2_IRQHandler+0x1c>)
 80002ba:	f000 f969 	bl	8000590 <puts>
	*pNVIC_ISPRBase |= (1 << IRQNO_I2C1);
 80002be:	4b05      	ldr	r3, [pc, #20]	; (80002d4 <TIM2_IRQHandler+0x20>)
 80002c0:	681b      	ldr	r3, [r3, #0]
 80002c2:	681a      	ldr	r2, [r3, #0]
 80002c4:	4b03      	ldr	r3, [pc, #12]	; (80002d4 <TIM2_IRQHandler+0x20>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80002cc:	601a      	str	r2, [r3, #0]
	while(1);
 80002ce:	e7fe      	b.n	80002ce <TIM2_IRQHandler+0x1a>
 80002d0:	08000dc0 	.word	0x08000dc0
 80002d4:	20000008 	.word	0x20000008

080002d8 <I2C1_EV_IRQHandler>:
}


void I2C1_EV_IRQHandler(void)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	af00      	add	r7, sp, #0
	printf("[I2C1_EV_IRQHandler] \n");
 80002dc:	4802      	ldr	r0, [pc, #8]	; (80002e8 <I2C1_EV_IRQHandler+0x10>)
 80002de:	f000 f957 	bl	8000590 <puts>
}
 80002e2:	bf00      	nop
 80002e4:	bd80      	pop	{r7, pc}
 80002e6:	bf00      	nop
 80002e8:	08000dd4 	.word	0x08000dd4

080002ec <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002ec:	b580      	push	{r7, lr}
 80002ee:	b086      	sub	sp, #24
 80002f0:	af00      	add	r7, sp, #0
 80002f2:	60f8      	str	r0, [r7, #12]
 80002f4:	60b9      	str	r1, [r7, #8]
 80002f6:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002f8:	2300      	movs	r3, #0
 80002fa:	617b      	str	r3, [r7, #20]
 80002fc:	e00a      	b.n	8000314 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80002fe:	f3af 8000 	nop.w
 8000302:	4601      	mov	r1, r0
 8000304:	68bb      	ldr	r3, [r7, #8]
 8000306:	1c5a      	adds	r2, r3, #1
 8000308:	60ba      	str	r2, [r7, #8]
 800030a:	b2ca      	uxtb	r2, r1
 800030c:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800030e:	697b      	ldr	r3, [r7, #20]
 8000310:	3301      	adds	r3, #1
 8000312:	617b      	str	r3, [r7, #20]
 8000314:	697a      	ldr	r2, [r7, #20]
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	429a      	cmp	r2, r3
 800031a:	dbf0      	blt.n	80002fe <_read+0x12>
	}

return len;
 800031c:	687b      	ldr	r3, [r7, #4]
}
 800031e:	4618      	mov	r0, r3
 8000320:	3718      	adds	r7, #24
 8000322:	46bd      	mov	sp, r7
 8000324:	bd80      	pop	{r7, pc}

08000326 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000326:	b580      	push	{r7, lr}
 8000328:	b086      	sub	sp, #24
 800032a:	af00      	add	r7, sp, #0
 800032c:	60f8      	str	r0, [r7, #12]
 800032e:	60b9      	str	r1, [r7, #8]
 8000330:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000332:	2300      	movs	r3, #0
 8000334:	617b      	str	r3, [r7, #20]
 8000336:	e009      	b.n	800034c <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000338:	68bb      	ldr	r3, [r7, #8]
 800033a:	1c5a      	adds	r2, r3, #1
 800033c:	60ba      	str	r2, [r7, #8]
 800033e:	781b      	ldrb	r3, [r3, #0]
 8000340:	4618      	mov	r0, r3
 8000342:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697a      	ldr	r2, [r7, #20]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	dbf1      	blt.n	8000338 <_write+0x12>
	}
	return len;
 8000354:	687b      	ldr	r3, [r7, #4]
}
 8000356:	4618      	mov	r0, r3
 8000358:	3718      	adds	r7, #24
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}

0800035e <_close>:

int _close(int file)
{
 800035e:	b480      	push	{r7}
 8000360:	b083      	sub	sp, #12
 8000362:	af00      	add	r7, sp, #0
 8000364:	6078      	str	r0, [r7, #4]
	return -1;
 8000366:	f04f 33ff 	mov.w	r3, #4294967295
}
 800036a:	4618      	mov	r0, r3
 800036c:	370c      	adds	r7, #12
 800036e:	46bd      	mov	sp, r7
 8000370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000374:	4770      	bx	lr

08000376 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000376:	b480      	push	{r7}
 8000378:	b083      	sub	sp, #12
 800037a:	af00      	add	r7, sp, #0
 800037c:	6078      	str	r0, [r7, #4]
 800037e:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000380:	683b      	ldr	r3, [r7, #0]
 8000382:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000386:	605a      	str	r2, [r3, #4]
	return 0;
 8000388:	2300      	movs	r3, #0
}
 800038a:	4618      	mov	r0, r3
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000394:	4770      	bx	lr

08000396 <_isatty>:

int _isatty(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
	return 1;
 800039e:	2301      	movs	r3, #1
}
 80003a0:	4618      	mov	r0, r3
 80003a2:	370c      	adds	r7, #12
 80003a4:	46bd      	mov	sp, r7
 80003a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003aa:	4770      	bx	lr

080003ac <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b085      	sub	sp, #20
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	60f8      	str	r0, [r7, #12]
 80003b4:	60b9      	str	r1, [r7, #8]
 80003b6:	607a      	str	r2, [r7, #4]
	return 0;
 80003b8:	2300      	movs	r3, #0
}
 80003ba:	4618      	mov	r0, r3
 80003bc:	3714      	adds	r7, #20
 80003be:	46bd      	mov	sp, r7
 80003c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c4:	4770      	bx	lr
	...

080003c8 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	b084      	sub	sp, #16
 80003cc:	af00      	add	r7, sp, #0
 80003ce:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80003d0:	4b11      	ldr	r3, [pc, #68]	; (8000418 <_sbrk+0x50>)
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	2b00      	cmp	r3, #0
 80003d6:	d102      	bne.n	80003de <_sbrk+0x16>
		heap_end = &end;
 80003d8:	4b0f      	ldr	r3, [pc, #60]	; (8000418 <_sbrk+0x50>)
 80003da:	4a10      	ldr	r2, [pc, #64]	; (800041c <_sbrk+0x54>)
 80003dc:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 80003de:	4b0e      	ldr	r3, [pc, #56]	; (8000418 <_sbrk+0x50>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 80003e4:	4b0c      	ldr	r3, [pc, #48]	; (8000418 <_sbrk+0x50>)
 80003e6:	681a      	ldr	r2, [r3, #0]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	4413      	add	r3, r2
 80003ec:	466a      	mov	r2, sp
 80003ee:	4293      	cmp	r3, r2
 80003f0:	d907      	bls.n	8000402 <_sbrk+0x3a>
	{
		errno = ENOMEM;
 80003f2:	f000 f83f 	bl	8000474 <__errno>
 80003f6:	4602      	mov	r2, r0
 80003f8:	230c      	movs	r3, #12
 80003fa:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 80003fc:	f04f 33ff 	mov.w	r3, #4294967295
 8000400:	e006      	b.n	8000410 <_sbrk+0x48>
	}

	heap_end += incr;
 8000402:	4b05      	ldr	r3, [pc, #20]	; (8000418 <_sbrk+0x50>)
 8000404:	681a      	ldr	r2, [r3, #0]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4413      	add	r3, r2
 800040a:	4a03      	ldr	r2, [pc, #12]	; (8000418 <_sbrk+0x50>)
 800040c:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800040e:	68fb      	ldr	r3, [r7, #12]
}
 8000410:	4618      	mov	r0, r3
 8000412:	3710      	adds	r7, #16
 8000414:	46bd      	mov	sp, r7
 8000416:	bd80      	pop	{r7, pc}
 8000418:	2000008c 	.word	0x2000008c
 800041c:	200000a0 	.word	0x200000a0

08000420 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000420:	480d      	ldr	r0, [pc, #52]	; (8000458 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000422:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000424:	480d      	ldr	r0, [pc, #52]	; (800045c <LoopForever+0x6>)
  ldr r1, =_edata
 8000426:	490e      	ldr	r1, [pc, #56]	; (8000460 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000428:	4a0e      	ldr	r2, [pc, #56]	; (8000464 <LoopForever+0xe>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800042c:	e002      	b.n	8000434 <LoopCopyDataInit>

0800042e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000430:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000432:	3304      	adds	r3, #4

08000434 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000434:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000436:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000438:	d3f9      	bcc.n	800042e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800043a:	4a0b      	ldr	r2, [pc, #44]	; (8000468 <LoopForever+0x12>)
  ldr r4, =_ebss
 800043c:	4c0b      	ldr	r4, [pc, #44]	; (800046c <LoopForever+0x16>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000440:	e001      	b.n	8000446 <LoopFillZerobss>

08000442 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000442:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000444:	3204      	adds	r2, #4

08000446 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000446:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000448:	d3fb      	bcc.n	8000442 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800044a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800044e:	f000 f817 	bl	8000480 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000452:	f7ff ff07 	bl	8000264 <main>

08000456 <LoopForever>:

LoopForever:
    b LoopForever
 8000456:	e7fe      	b.n	8000456 <LoopForever>
  ldr   r0, =_estack
 8000458:	20050000 	.word	0x20050000
  ldr r0, =_sdata
 800045c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000460:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 8000464:	08000e60 	.word	0x08000e60
  ldr r2, =_sbss
 8000468:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 800046c:	200000a0 	.word	0x200000a0

08000470 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000470:	e7fe      	b.n	8000470 <ADC1_2_IRQHandler>
	...

08000474 <__errno>:
 8000474:	4b01      	ldr	r3, [pc, #4]	; (800047c <__errno+0x8>)
 8000476:	6818      	ldr	r0, [r3, #0]
 8000478:	4770      	bx	lr
 800047a:	bf00      	nop
 800047c:	2000000c 	.word	0x2000000c

08000480 <__libc_init_array>:
 8000480:	b570      	push	{r4, r5, r6, lr}
 8000482:	4e0d      	ldr	r6, [pc, #52]	; (80004b8 <__libc_init_array+0x38>)
 8000484:	4c0d      	ldr	r4, [pc, #52]	; (80004bc <__libc_init_array+0x3c>)
 8000486:	1ba4      	subs	r4, r4, r6
 8000488:	10a4      	asrs	r4, r4, #2
 800048a:	2500      	movs	r5, #0
 800048c:	42a5      	cmp	r5, r4
 800048e:	d109      	bne.n	80004a4 <__libc_init_array+0x24>
 8000490:	4e0b      	ldr	r6, [pc, #44]	; (80004c0 <__libc_init_array+0x40>)
 8000492:	4c0c      	ldr	r4, [pc, #48]	; (80004c4 <__libc_init_array+0x44>)
 8000494:	f000 fc88 	bl	8000da8 <_init>
 8000498:	1ba4      	subs	r4, r4, r6
 800049a:	10a4      	asrs	r4, r4, #2
 800049c:	2500      	movs	r5, #0
 800049e:	42a5      	cmp	r5, r4
 80004a0:	d105      	bne.n	80004ae <__libc_init_array+0x2e>
 80004a2:	bd70      	pop	{r4, r5, r6, pc}
 80004a4:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004a8:	4798      	blx	r3
 80004aa:	3501      	adds	r5, #1
 80004ac:	e7ee      	b.n	800048c <__libc_init_array+0xc>
 80004ae:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80004b2:	4798      	blx	r3
 80004b4:	3501      	adds	r5, #1
 80004b6:	e7f2      	b.n	800049e <__libc_init_array+0x1e>
 80004b8:	08000e50 	.word	0x08000e50
 80004bc:	08000e50 	.word	0x08000e50
 80004c0:	08000e50 	.word	0x08000e50
 80004c4:	08000e54 	.word	0x08000e54

080004c8 <memset>:
 80004c8:	4402      	add	r2, r0
 80004ca:	4603      	mov	r3, r0
 80004cc:	4293      	cmp	r3, r2
 80004ce:	d100      	bne.n	80004d2 <memset+0xa>
 80004d0:	4770      	bx	lr
 80004d2:	f803 1b01 	strb.w	r1, [r3], #1
 80004d6:	e7f9      	b.n	80004cc <memset+0x4>

080004d8 <_puts_r>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	460e      	mov	r6, r1
 80004dc:	4605      	mov	r5, r0
 80004de:	b118      	cbz	r0, 80004e8 <_puts_r+0x10>
 80004e0:	6983      	ldr	r3, [r0, #24]
 80004e2:	b90b      	cbnz	r3, 80004e8 <_puts_r+0x10>
 80004e4:	f000 fa0c 	bl	8000900 <__sinit>
 80004e8:	69ab      	ldr	r3, [r5, #24]
 80004ea:	68ac      	ldr	r4, [r5, #8]
 80004ec:	b913      	cbnz	r3, 80004f4 <_puts_r+0x1c>
 80004ee:	4628      	mov	r0, r5
 80004f0:	f000 fa06 	bl	8000900 <__sinit>
 80004f4:	4b23      	ldr	r3, [pc, #140]	; (8000584 <_puts_r+0xac>)
 80004f6:	429c      	cmp	r4, r3
 80004f8:	d117      	bne.n	800052a <_puts_r+0x52>
 80004fa:	686c      	ldr	r4, [r5, #4]
 80004fc:	89a3      	ldrh	r3, [r4, #12]
 80004fe:	071b      	lsls	r3, r3, #28
 8000500:	d51d      	bpl.n	800053e <_puts_r+0x66>
 8000502:	6923      	ldr	r3, [r4, #16]
 8000504:	b1db      	cbz	r3, 800053e <_puts_r+0x66>
 8000506:	3e01      	subs	r6, #1
 8000508:	68a3      	ldr	r3, [r4, #8]
 800050a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800050e:	3b01      	subs	r3, #1
 8000510:	60a3      	str	r3, [r4, #8]
 8000512:	b9e9      	cbnz	r1, 8000550 <_puts_r+0x78>
 8000514:	2b00      	cmp	r3, #0
 8000516:	da2e      	bge.n	8000576 <_puts_r+0x9e>
 8000518:	4622      	mov	r2, r4
 800051a:	210a      	movs	r1, #10
 800051c:	4628      	mov	r0, r5
 800051e:	f000 f83f 	bl	80005a0 <__swbuf_r>
 8000522:	3001      	adds	r0, #1
 8000524:	d011      	beq.n	800054a <_puts_r+0x72>
 8000526:	200a      	movs	r0, #10
 8000528:	e011      	b.n	800054e <_puts_r+0x76>
 800052a:	4b17      	ldr	r3, [pc, #92]	; (8000588 <_puts_r+0xb0>)
 800052c:	429c      	cmp	r4, r3
 800052e:	d101      	bne.n	8000534 <_puts_r+0x5c>
 8000530:	68ac      	ldr	r4, [r5, #8]
 8000532:	e7e3      	b.n	80004fc <_puts_r+0x24>
 8000534:	4b15      	ldr	r3, [pc, #84]	; (800058c <_puts_r+0xb4>)
 8000536:	429c      	cmp	r4, r3
 8000538:	bf08      	it	eq
 800053a:	68ec      	ldreq	r4, [r5, #12]
 800053c:	e7de      	b.n	80004fc <_puts_r+0x24>
 800053e:	4621      	mov	r1, r4
 8000540:	4628      	mov	r0, r5
 8000542:	f000 f87f 	bl	8000644 <__swsetup_r>
 8000546:	2800      	cmp	r0, #0
 8000548:	d0dd      	beq.n	8000506 <_puts_r+0x2e>
 800054a:	f04f 30ff 	mov.w	r0, #4294967295
 800054e:	bd70      	pop	{r4, r5, r6, pc}
 8000550:	2b00      	cmp	r3, #0
 8000552:	da04      	bge.n	800055e <_puts_r+0x86>
 8000554:	69a2      	ldr	r2, [r4, #24]
 8000556:	429a      	cmp	r2, r3
 8000558:	dc06      	bgt.n	8000568 <_puts_r+0x90>
 800055a:	290a      	cmp	r1, #10
 800055c:	d004      	beq.n	8000568 <_puts_r+0x90>
 800055e:	6823      	ldr	r3, [r4, #0]
 8000560:	1c5a      	adds	r2, r3, #1
 8000562:	6022      	str	r2, [r4, #0]
 8000564:	7019      	strb	r1, [r3, #0]
 8000566:	e7cf      	b.n	8000508 <_puts_r+0x30>
 8000568:	4622      	mov	r2, r4
 800056a:	4628      	mov	r0, r5
 800056c:	f000 f818 	bl	80005a0 <__swbuf_r>
 8000570:	3001      	adds	r0, #1
 8000572:	d1c9      	bne.n	8000508 <_puts_r+0x30>
 8000574:	e7e9      	b.n	800054a <_puts_r+0x72>
 8000576:	6823      	ldr	r3, [r4, #0]
 8000578:	200a      	movs	r0, #10
 800057a:	1c5a      	adds	r2, r3, #1
 800057c:	6022      	str	r2, [r4, #0]
 800057e:	7018      	strb	r0, [r3, #0]
 8000580:	e7e5      	b.n	800054e <_puts_r+0x76>
 8000582:	bf00      	nop
 8000584:	08000e10 	.word	0x08000e10
 8000588:	08000e30 	.word	0x08000e30
 800058c:	08000df0 	.word	0x08000df0

08000590 <puts>:
 8000590:	4b02      	ldr	r3, [pc, #8]	; (800059c <puts+0xc>)
 8000592:	4601      	mov	r1, r0
 8000594:	6818      	ldr	r0, [r3, #0]
 8000596:	f7ff bf9f 	b.w	80004d8 <_puts_r>
 800059a:	bf00      	nop
 800059c:	2000000c 	.word	0x2000000c

080005a0 <__swbuf_r>:
 80005a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80005a2:	460e      	mov	r6, r1
 80005a4:	4614      	mov	r4, r2
 80005a6:	4605      	mov	r5, r0
 80005a8:	b118      	cbz	r0, 80005b2 <__swbuf_r+0x12>
 80005aa:	6983      	ldr	r3, [r0, #24]
 80005ac:	b90b      	cbnz	r3, 80005b2 <__swbuf_r+0x12>
 80005ae:	f000 f9a7 	bl	8000900 <__sinit>
 80005b2:	4b21      	ldr	r3, [pc, #132]	; (8000638 <__swbuf_r+0x98>)
 80005b4:	429c      	cmp	r4, r3
 80005b6:	d12a      	bne.n	800060e <__swbuf_r+0x6e>
 80005b8:	686c      	ldr	r4, [r5, #4]
 80005ba:	69a3      	ldr	r3, [r4, #24]
 80005bc:	60a3      	str	r3, [r4, #8]
 80005be:	89a3      	ldrh	r3, [r4, #12]
 80005c0:	071a      	lsls	r2, r3, #28
 80005c2:	d52e      	bpl.n	8000622 <__swbuf_r+0x82>
 80005c4:	6923      	ldr	r3, [r4, #16]
 80005c6:	b363      	cbz	r3, 8000622 <__swbuf_r+0x82>
 80005c8:	6923      	ldr	r3, [r4, #16]
 80005ca:	6820      	ldr	r0, [r4, #0]
 80005cc:	1ac0      	subs	r0, r0, r3
 80005ce:	6963      	ldr	r3, [r4, #20]
 80005d0:	b2f6      	uxtb	r6, r6
 80005d2:	4283      	cmp	r3, r0
 80005d4:	4637      	mov	r7, r6
 80005d6:	dc04      	bgt.n	80005e2 <__swbuf_r+0x42>
 80005d8:	4621      	mov	r1, r4
 80005da:	4628      	mov	r0, r5
 80005dc:	f000 f926 	bl	800082c <_fflush_r>
 80005e0:	bb28      	cbnz	r0, 800062e <__swbuf_r+0x8e>
 80005e2:	68a3      	ldr	r3, [r4, #8]
 80005e4:	3b01      	subs	r3, #1
 80005e6:	60a3      	str	r3, [r4, #8]
 80005e8:	6823      	ldr	r3, [r4, #0]
 80005ea:	1c5a      	adds	r2, r3, #1
 80005ec:	6022      	str	r2, [r4, #0]
 80005ee:	701e      	strb	r6, [r3, #0]
 80005f0:	6963      	ldr	r3, [r4, #20]
 80005f2:	3001      	adds	r0, #1
 80005f4:	4283      	cmp	r3, r0
 80005f6:	d004      	beq.n	8000602 <__swbuf_r+0x62>
 80005f8:	89a3      	ldrh	r3, [r4, #12]
 80005fa:	07db      	lsls	r3, r3, #31
 80005fc:	d519      	bpl.n	8000632 <__swbuf_r+0x92>
 80005fe:	2e0a      	cmp	r6, #10
 8000600:	d117      	bne.n	8000632 <__swbuf_r+0x92>
 8000602:	4621      	mov	r1, r4
 8000604:	4628      	mov	r0, r5
 8000606:	f000 f911 	bl	800082c <_fflush_r>
 800060a:	b190      	cbz	r0, 8000632 <__swbuf_r+0x92>
 800060c:	e00f      	b.n	800062e <__swbuf_r+0x8e>
 800060e:	4b0b      	ldr	r3, [pc, #44]	; (800063c <__swbuf_r+0x9c>)
 8000610:	429c      	cmp	r4, r3
 8000612:	d101      	bne.n	8000618 <__swbuf_r+0x78>
 8000614:	68ac      	ldr	r4, [r5, #8]
 8000616:	e7d0      	b.n	80005ba <__swbuf_r+0x1a>
 8000618:	4b09      	ldr	r3, [pc, #36]	; (8000640 <__swbuf_r+0xa0>)
 800061a:	429c      	cmp	r4, r3
 800061c:	bf08      	it	eq
 800061e:	68ec      	ldreq	r4, [r5, #12]
 8000620:	e7cb      	b.n	80005ba <__swbuf_r+0x1a>
 8000622:	4621      	mov	r1, r4
 8000624:	4628      	mov	r0, r5
 8000626:	f000 f80d 	bl	8000644 <__swsetup_r>
 800062a:	2800      	cmp	r0, #0
 800062c:	d0cc      	beq.n	80005c8 <__swbuf_r+0x28>
 800062e:	f04f 37ff 	mov.w	r7, #4294967295
 8000632:	4638      	mov	r0, r7
 8000634:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000636:	bf00      	nop
 8000638:	08000e10 	.word	0x08000e10
 800063c:	08000e30 	.word	0x08000e30
 8000640:	08000df0 	.word	0x08000df0

08000644 <__swsetup_r>:
 8000644:	4b32      	ldr	r3, [pc, #200]	; (8000710 <__swsetup_r+0xcc>)
 8000646:	b570      	push	{r4, r5, r6, lr}
 8000648:	681d      	ldr	r5, [r3, #0]
 800064a:	4606      	mov	r6, r0
 800064c:	460c      	mov	r4, r1
 800064e:	b125      	cbz	r5, 800065a <__swsetup_r+0x16>
 8000650:	69ab      	ldr	r3, [r5, #24]
 8000652:	b913      	cbnz	r3, 800065a <__swsetup_r+0x16>
 8000654:	4628      	mov	r0, r5
 8000656:	f000 f953 	bl	8000900 <__sinit>
 800065a:	4b2e      	ldr	r3, [pc, #184]	; (8000714 <__swsetup_r+0xd0>)
 800065c:	429c      	cmp	r4, r3
 800065e:	d10f      	bne.n	8000680 <__swsetup_r+0x3c>
 8000660:	686c      	ldr	r4, [r5, #4]
 8000662:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000666:	b29a      	uxth	r2, r3
 8000668:	0715      	lsls	r5, r2, #28
 800066a:	d42c      	bmi.n	80006c6 <__swsetup_r+0x82>
 800066c:	06d0      	lsls	r0, r2, #27
 800066e:	d411      	bmi.n	8000694 <__swsetup_r+0x50>
 8000670:	2209      	movs	r2, #9
 8000672:	6032      	str	r2, [r6, #0]
 8000674:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000678:	81a3      	strh	r3, [r4, #12]
 800067a:	f04f 30ff 	mov.w	r0, #4294967295
 800067e:	e03e      	b.n	80006fe <__swsetup_r+0xba>
 8000680:	4b25      	ldr	r3, [pc, #148]	; (8000718 <__swsetup_r+0xd4>)
 8000682:	429c      	cmp	r4, r3
 8000684:	d101      	bne.n	800068a <__swsetup_r+0x46>
 8000686:	68ac      	ldr	r4, [r5, #8]
 8000688:	e7eb      	b.n	8000662 <__swsetup_r+0x1e>
 800068a:	4b24      	ldr	r3, [pc, #144]	; (800071c <__swsetup_r+0xd8>)
 800068c:	429c      	cmp	r4, r3
 800068e:	bf08      	it	eq
 8000690:	68ec      	ldreq	r4, [r5, #12]
 8000692:	e7e6      	b.n	8000662 <__swsetup_r+0x1e>
 8000694:	0751      	lsls	r1, r2, #29
 8000696:	d512      	bpl.n	80006be <__swsetup_r+0x7a>
 8000698:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800069a:	b141      	cbz	r1, 80006ae <__swsetup_r+0x6a>
 800069c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80006a0:	4299      	cmp	r1, r3
 80006a2:	d002      	beq.n	80006aa <__swsetup_r+0x66>
 80006a4:	4630      	mov	r0, r6
 80006a6:	f000 fa19 	bl	8000adc <_free_r>
 80006aa:	2300      	movs	r3, #0
 80006ac:	6363      	str	r3, [r4, #52]	; 0x34
 80006ae:	89a3      	ldrh	r3, [r4, #12]
 80006b0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006b4:	81a3      	strh	r3, [r4, #12]
 80006b6:	2300      	movs	r3, #0
 80006b8:	6063      	str	r3, [r4, #4]
 80006ba:	6923      	ldr	r3, [r4, #16]
 80006bc:	6023      	str	r3, [r4, #0]
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	f043 0308 	orr.w	r3, r3, #8
 80006c4:	81a3      	strh	r3, [r4, #12]
 80006c6:	6923      	ldr	r3, [r4, #16]
 80006c8:	b94b      	cbnz	r3, 80006de <__swsetup_r+0x9a>
 80006ca:	89a3      	ldrh	r3, [r4, #12]
 80006cc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006d4:	d003      	beq.n	80006de <__swsetup_r+0x9a>
 80006d6:	4621      	mov	r1, r4
 80006d8:	4630      	mov	r0, r6
 80006da:	f000 f9bf 	bl	8000a5c <__smakebuf_r>
 80006de:	89a2      	ldrh	r2, [r4, #12]
 80006e0:	f012 0301 	ands.w	r3, r2, #1
 80006e4:	d00c      	beq.n	8000700 <__swsetup_r+0xbc>
 80006e6:	2300      	movs	r3, #0
 80006e8:	60a3      	str	r3, [r4, #8]
 80006ea:	6963      	ldr	r3, [r4, #20]
 80006ec:	425b      	negs	r3, r3
 80006ee:	61a3      	str	r3, [r4, #24]
 80006f0:	6923      	ldr	r3, [r4, #16]
 80006f2:	b953      	cbnz	r3, 800070a <__swsetup_r+0xc6>
 80006f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80006f8:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 80006fc:	d1ba      	bne.n	8000674 <__swsetup_r+0x30>
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	0792      	lsls	r2, r2, #30
 8000702:	bf58      	it	pl
 8000704:	6963      	ldrpl	r3, [r4, #20]
 8000706:	60a3      	str	r3, [r4, #8]
 8000708:	e7f2      	b.n	80006f0 <__swsetup_r+0xac>
 800070a:	2000      	movs	r0, #0
 800070c:	e7f7      	b.n	80006fe <__swsetup_r+0xba>
 800070e:	bf00      	nop
 8000710:	2000000c 	.word	0x2000000c
 8000714:	08000e10 	.word	0x08000e10
 8000718:	08000e30 	.word	0x08000e30
 800071c:	08000df0 	.word	0x08000df0

08000720 <__sflush_r>:
 8000720:	898a      	ldrh	r2, [r1, #12]
 8000722:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000726:	4605      	mov	r5, r0
 8000728:	0710      	lsls	r0, r2, #28
 800072a:	460c      	mov	r4, r1
 800072c:	d458      	bmi.n	80007e0 <__sflush_r+0xc0>
 800072e:	684b      	ldr	r3, [r1, #4]
 8000730:	2b00      	cmp	r3, #0
 8000732:	dc05      	bgt.n	8000740 <__sflush_r+0x20>
 8000734:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000736:	2b00      	cmp	r3, #0
 8000738:	dc02      	bgt.n	8000740 <__sflush_r+0x20>
 800073a:	2000      	movs	r0, #0
 800073c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000740:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000742:	2e00      	cmp	r6, #0
 8000744:	d0f9      	beq.n	800073a <__sflush_r+0x1a>
 8000746:	2300      	movs	r3, #0
 8000748:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800074c:	682f      	ldr	r7, [r5, #0]
 800074e:	6a21      	ldr	r1, [r4, #32]
 8000750:	602b      	str	r3, [r5, #0]
 8000752:	d032      	beq.n	80007ba <__sflush_r+0x9a>
 8000754:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000756:	89a3      	ldrh	r3, [r4, #12]
 8000758:	075a      	lsls	r2, r3, #29
 800075a:	d505      	bpl.n	8000768 <__sflush_r+0x48>
 800075c:	6863      	ldr	r3, [r4, #4]
 800075e:	1ac0      	subs	r0, r0, r3
 8000760:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000762:	b10b      	cbz	r3, 8000768 <__sflush_r+0x48>
 8000764:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000766:	1ac0      	subs	r0, r0, r3
 8000768:	2300      	movs	r3, #0
 800076a:	4602      	mov	r2, r0
 800076c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800076e:	6a21      	ldr	r1, [r4, #32]
 8000770:	4628      	mov	r0, r5
 8000772:	47b0      	blx	r6
 8000774:	1c43      	adds	r3, r0, #1
 8000776:	89a3      	ldrh	r3, [r4, #12]
 8000778:	d106      	bne.n	8000788 <__sflush_r+0x68>
 800077a:	6829      	ldr	r1, [r5, #0]
 800077c:	291d      	cmp	r1, #29
 800077e:	d848      	bhi.n	8000812 <__sflush_r+0xf2>
 8000780:	4a29      	ldr	r2, [pc, #164]	; (8000828 <__sflush_r+0x108>)
 8000782:	40ca      	lsrs	r2, r1
 8000784:	07d6      	lsls	r6, r2, #31
 8000786:	d544      	bpl.n	8000812 <__sflush_r+0xf2>
 8000788:	2200      	movs	r2, #0
 800078a:	6062      	str	r2, [r4, #4]
 800078c:	04d9      	lsls	r1, r3, #19
 800078e:	6922      	ldr	r2, [r4, #16]
 8000790:	6022      	str	r2, [r4, #0]
 8000792:	d504      	bpl.n	800079e <__sflush_r+0x7e>
 8000794:	1c42      	adds	r2, r0, #1
 8000796:	d101      	bne.n	800079c <__sflush_r+0x7c>
 8000798:	682b      	ldr	r3, [r5, #0]
 800079a:	b903      	cbnz	r3, 800079e <__sflush_r+0x7e>
 800079c:	6560      	str	r0, [r4, #84]	; 0x54
 800079e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80007a0:	602f      	str	r7, [r5, #0]
 80007a2:	2900      	cmp	r1, #0
 80007a4:	d0c9      	beq.n	800073a <__sflush_r+0x1a>
 80007a6:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007aa:	4299      	cmp	r1, r3
 80007ac:	d002      	beq.n	80007b4 <__sflush_r+0x94>
 80007ae:	4628      	mov	r0, r5
 80007b0:	f000 f994 	bl	8000adc <_free_r>
 80007b4:	2000      	movs	r0, #0
 80007b6:	6360      	str	r0, [r4, #52]	; 0x34
 80007b8:	e7c0      	b.n	800073c <__sflush_r+0x1c>
 80007ba:	2301      	movs	r3, #1
 80007bc:	4628      	mov	r0, r5
 80007be:	47b0      	blx	r6
 80007c0:	1c41      	adds	r1, r0, #1
 80007c2:	d1c8      	bne.n	8000756 <__sflush_r+0x36>
 80007c4:	682b      	ldr	r3, [r5, #0]
 80007c6:	2b00      	cmp	r3, #0
 80007c8:	d0c5      	beq.n	8000756 <__sflush_r+0x36>
 80007ca:	2b1d      	cmp	r3, #29
 80007cc:	d001      	beq.n	80007d2 <__sflush_r+0xb2>
 80007ce:	2b16      	cmp	r3, #22
 80007d0:	d101      	bne.n	80007d6 <__sflush_r+0xb6>
 80007d2:	602f      	str	r7, [r5, #0]
 80007d4:	e7b1      	b.n	800073a <__sflush_r+0x1a>
 80007d6:	89a3      	ldrh	r3, [r4, #12]
 80007d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007dc:	81a3      	strh	r3, [r4, #12]
 80007de:	e7ad      	b.n	800073c <__sflush_r+0x1c>
 80007e0:	690f      	ldr	r7, [r1, #16]
 80007e2:	2f00      	cmp	r7, #0
 80007e4:	d0a9      	beq.n	800073a <__sflush_r+0x1a>
 80007e6:	0793      	lsls	r3, r2, #30
 80007e8:	680e      	ldr	r6, [r1, #0]
 80007ea:	bf08      	it	eq
 80007ec:	694b      	ldreq	r3, [r1, #20]
 80007ee:	600f      	str	r7, [r1, #0]
 80007f0:	bf18      	it	ne
 80007f2:	2300      	movne	r3, #0
 80007f4:	eba6 0807 	sub.w	r8, r6, r7
 80007f8:	608b      	str	r3, [r1, #8]
 80007fa:	f1b8 0f00 	cmp.w	r8, #0
 80007fe:	dd9c      	ble.n	800073a <__sflush_r+0x1a>
 8000800:	4643      	mov	r3, r8
 8000802:	463a      	mov	r2, r7
 8000804:	6a21      	ldr	r1, [r4, #32]
 8000806:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000808:	4628      	mov	r0, r5
 800080a:	47b0      	blx	r6
 800080c:	2800      	cmp	r0, #0
 800080e:	dc06      	bgt.n	800081e <__sflush_r+0xfe>
 8000810:	89a3      	ldrh	r3, [r4, #12]
 8000812:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000816:	81a3      	strh	r3, [r4, #12]
 8000818:	f04f 30ff 	mov.w	r0, #4294967295
 800081c:	e78e      	b.n	800073c <__sflush_r+0x1c>
 800081e:	4407      	add	r7, r0
 8000820:	eba8 0800 	sub.w	r8, r8, r0
 8000824:	e7e9      	b.n	80007fa <__sflush_r+0xda>
 8000826:	bf00      	nop
 8000828:	20400001 	.word	0x20400001

0800082c <_fflush_r>:
 800082c:	b538      	push	{r3, r4, r5, lr}
 800082e:	690b      	ldr	r3, [r1, #16]
 8000830:	4605      	mov	r5, r0
 8000832:	460c      	mov	r4, r1
 8000834:	b1db      	cbz	r3, 800086e <_fflush_r+0x42>
 8000836:	b118      	cbz	r0, 8000840 <_fflush_r+0x14>
 8000838:	6983      	ldr	r3, [r0, #24]
 800083a:	b90b      	cbnz	r3, 8000840 <_fflush_r+0x14>
 800083c:	f000 f860 	bl	8000900 <__sinit>
 8000840:	4b0c      	ldr	r3, [pc, #48]	; (8000874 <_fflush_r+0x48>)
 8000842:	429c      	cmp	r4, r3
 8000844:	d109      	bne.n	800085a <_fflush_r+0x2e>
 8000846:	686c      	ldr	r4, [r5, #4]
 8000848:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800084c:	b17b      	cbz	r3, 800086e <_fflush_r+0x42>
 800084e:	4621      	mov	r1, r4
 8000850:	4628      	mov	r0, r5
 8000852:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000856:	f7ff bf63 	b.w	8000720 <__sflush_r>
 800085a:	4b07      	ldr	r3, [pc, #28]	; (8000878 <_fflush_r+0x4c>)
 800085c:	429c      	cmp	r4, r3
 800085e:	d101      	bne.n	8000864 <_fflush_r+0x38>
 8000860:	68ac      	ldr	r4, [r5, #8]
 8000862:	e7f1      	b.n	8000848 <_fflush_r+0x1c>
 8000864:	4b05      	ldr	r3, [pc, #20]	; (800087c <_fflush_r+0x50>)
 8000866:	429c      	cmp	r4, r3
 8000868:	bf08      	it	eq
 800086a:	68ec      	ldreq	r4, [r5, #12]
 800086c:	e7ec      	b.n	8000848 <_fflush_r+0x1c>
 800086e:	2000      	movs	r0, #0
 8000870:	bd38      	pop	{r3, r4, r5, pc}
 8000872:	bf00      	nop
 8000874:	08000e10 	.word	0x08000e10
 8000878:	08000e30 	.word	0x08000e30
 800087c:	08000df0 	.word	0x08000df0

08000880 <std>:
 8000880:	2300      	movs	r3, #0
 8000882:	b510      	push	{r4, lr}
 8000884:	4604      	mov	r4, r0
 8000886:	e9c0 3300 	strd	r3, r3, [r0]
 800088a:	6083      	str	r3, [r0, #8]
 800088c:	8181      	strh	r1, [r0, #12]
 800088e:	6643      	str	r3, [r0, #100]	; 0x64
 8000890:	81c2      	strh	r2, [r0, #14]
 8000892:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000896:	6183      	str	r3, [r0, #24]
 8000898:	4619      	mov	r1, r3
 800089a:	2208      	movs	r2, #8
 800089c:	305c      	adds	r0, #92	; 0x5c
 800089e:	f7ff fe13 	bl	80004c8 <memset>
 80008a2:	4b05      	ldr	r3, [pc, #20]	; (80008b8 <std+0x38>)
 80008a4:	6263      	str	r3, [r4, #36]	; 0x24
 80008a6:	4b05      	ldr	r3, [pc, #20]	; (80008bc <std+0x3c>)
 80008a8:	62a3      	str	r3, [r4, #40]	; 0x28
 80008aa:	4b05      	ldr	r3, [pc, #20]	; (80008c0 <std+0x40>)
 80008ac:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008ae:	4b05      	ldr	r3, [pc, #20]	; (80008c4 <std+0x44>)
 80008b0:	6224      	str	r4, [r4, #32]
 80008b2:	6323      	str	r3, [r4, #48]	; 0x30
 80008b4:	bd10      	pop	{r4, pc}
 80008b6:	bf00      	nop
 80008b8:	08000c4d 	.word	0x08000c4d
 80008bc:	08000c6f 	.word	0x08000c6f
 80008c0:	08000ca7 	.word	0x08000ca7
 80008c4:	08000ccb 	.word	0x08000ccb

080008c8 <_cleanup_r>:
 80008c8:	4901      	ldr	r1, [pc, #4]	; (80008d0 <_cleanup_r+0x8>)
 80008ca:	f000 b885 	b.w	80009d8 <_fwalk_reent>
 80008ce:	bf00      	nop
 80008d0:	0800082d 	.word	0x0800082d

080008d4 <__sfmoreglue>:
 80008d4:	b570      	push	{r4, r5, r6, lr}
 80008d6:	1e4a      	subs	r2, r1, #1
 80008d8:	2568      	movs	r5, #104	; 0x68
 80008da:	4355      	muls	r5, r2
 80008dc:	460e      	mov	r6, r1
 80008de:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008e2:	f000 f949 	bl	8000b78 <_malloc_r>
 80008e6:	4604      	mov	r4, r0
 80008e8:	b140      	cbz	r0, 80008fc <__sfmoreglue+0x28>
 80008ea:	2100      	movs	r1, #0
 80008ec:	e9c0 1600 	strd	r1, r6, [r0]
 80008f0:	300c      	adds	r0, #12
 80008f2:	60a0      	str	r0, [r4, #8]
 80008f4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80008f8:	f7ff fde6 	bl	80004c8 <memset>
 80008fc:	4620      	mov	r0, r4
 80008fe:	bd70      	pop	{r4, r5, r6, pc}

08000900 <__sinit>:
 8000900:	6983      	ldr	r3, [r0, #24]
 8000902:	b510      	push	{r4, lr}
 8000904:	4604      	mov	r4, r0
 8000906:	bb33      	cbnz	r3, 8000956 <__sinit+0x56>
 8000908:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 800090c:	6503      	str	r3, [r0, #80]	; 0x50
 800090e:	4b12      	ldr	r3, [pc, #72]	; (8000958 <__sinit+0x58>)
 8000910:	4a12      	ldr	r2, [pc, #72]	; (800095c <__sinit+0x5c>)
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	6282      	str	r2, [r0, #40]	; 0x28
 8000916:	4298      	cmp	r0, r3
 8000918:	bf04      	itt	eq
 800091a:	2301      	moveq	r3, #1
 800091c:	6183      	streq	r3, [r0, #24]
 800091e:	f000 f81f 	bl	8000960 <__sfp>
 8000922:	6060      	str	r0, [r4, #4]
 8000924:	4620      	mov	r0, r4
 8000926:	f000 f81b 	bl	8000960 <__sfp>
 800092a:	60a0      	str	r0, [r4, #8]
 800092c:	4620      	mov	r0, r4
 800092e:	f000 f817 	bl	8000960 <__sfp>
 8000932:	2200      	movs	r2, #0
 8000934:	60e0      	str	r0, [r4, #12]
 8000936:	2104      	movs	r1, #4
 8000938:	6860      	ldr	r0, [r4, #4]
 800093a:	f7ff ffa1 	bl	8000880 <std>
 800093e:	2201      	movs	r2, #1
 8000940:	2109      	movs	r1, #9
 8000942:	68a0      	ldr	r0, [r4, #8]
 8000944:	f7ff ff9c 	bl	8000880 <std>
 8000948:	2202      	movs	r2, #2
 800094a:	2112      	movs	r1, #18
 800094c:	68e0      	ldr	r0, [r4, #12]
 800094e:	f7ff ff97 	bl	8000880 <std>
 8000952:	2301      	movs	r3, #1
 8000954:	61a3      	str	r3, [r4, #24]
 8000956:	bd10      	pop	{r4, pc}
 8000958:	08000dec 	.word	0x08000dec
 800095c:	080008c9 	.word	0x080008c9

08000960 <__sfp>:
 8000960:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000962:	4b1b      	ldr	r3, [pc, #108]	; (80009d0 <__sfp+0x70>)
 8000964:	681e      	ldr	r6, [r3, #0]
 8000966:	69b3      	ldr	r3, [r6, #24]
 8000968:	4607      	mov	r7, r0
 800096a:	b913      	cbnz	r3, 8000972 <__sfp+0x12>
 800096c:	4630      	mov	r0, r6
 800096e:	f7ff ffc7 	bl	8000900 <__sinit>
 8000972:	3648      	adds	r6, #72	; 0x48
 8000974:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000978:	3b01      	subs	r3, #1
 800097a:	d503      	bpl.n	8000984 <__sfp+0x24>
 800097c:	6833      	ldr	r3, [r6, #0]
 800097e:	b133      	cbz	r3, 800098e <__sfp+0x2e>
 8000980:	6836      	ldr	r6, [r6, #0]
 8000982:	e7f7      	b.n	8000974 <__sfp+0x14>
 8000984:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000988:	b16d      	cbz	r5, 80009a6 <__sfp+0x46>
 800098a:	3468      	adds	r4, #104	; 0x68
 800098c:	e7f4      	b.n	8000978 <__sfp+0x18>
 800098e:	2104      	movs	r1, #4
 8000990:	4638      	mov	r0, r7
 8000992:	f7ff ff9f 	bl	80008d4 <__sfmoreglue>
 8000996:	6030      	str	r0, [r6, #0]
 8000998:	2800      	cmp	r0, #0
 800099a:	d1f1      	bne.n	8000980 <__sfp+0x20>
 800099c:	230c      	movs	r3, #12
 800099e:	603b      	str	r3, [r7, #0]
 80009a0:	4604      	mov	r4, r0
 80009a2:	4620      	mov	r0, r4
 80009a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009a6:	4b0b      	ldr	r3, [pc, #44]	; (80009d4 <__sfp+0x74>)
 80009a8:	6665      	str	r5, [r4, #100]	; 0x64
 80009aa:	e9c4 5500 	strd	r5, r5, [r4]
 80009ae:	60a5      	str	r5, [r4, #8]
 80009b0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 80009b4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80009b8:	2208      	movs	r2, #8
 80009ba:	4629      	mov	r1, r5
 80009bc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80009c0:	f7ff fd82 	bl	80004c8 <memset>
 80009c4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80009c8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80009cc:	e7e9      	b.n	80009a2 <__sfp+0x42>
 80009ce:	bf00      	nop
 80009d0:	08000dec 	.word	0x08000dec
 80009d4:	ffff0001 	.word	0xffff0001

080009d8 <_fwalk_reent>:
 80009d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80009dc:	4680      	mov	r8, r0
 80009de:	4689      	mov	r9, r1
 80009e0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80009e4:	2600      	movs	r6, #0
 80009e6:	b914      	cbnz	r4, 80009ee <_fwalk_reent+0x16>
 80009e8:	4630      	mov	r0, r6
 80009ea:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80009ee:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80009f2:	3f01      	subs	r7, #1
 80009f4:	d501      	bpl.n	80009fa <_fwalk_reent+0x22>
 80009f6:	6824      	ldr	r4, [r4, #0]
 80009f8:	e7f5      	b.n	80009e6 <_fwalk_reent+0xe>
 80009fa:	89ab      	ldrh	r3, [r5, #12]
 80009fc:	2b01      	cmp	r3, #1
 80009fe:	d907      	bls.n	8000a10 <_fwalk_reent+0x38>
 8000a00:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a04:	3301      	adds	r3, #1
 8000a06:	d003      	beq.n	8000a10 <_fwalk_reent+0x38>
 8000a08:	4629      	mov	r1, r5
 8000a0a:	4640      	mov	r0, r8
 8000a0c:	47c8      	blx	r9
 8000a0e:	4306      	orrs	r6, r0
 8000a10:	3568      	adds	r5, #104	; 0x68
 8000a12:	e7ee      	b.n	80009f2 <_fwalk_reent+0x1a>

08000a14 <__swhatbuf_r>:
 8000a14:	b570      	push	{r4, r5, r6, lr}
 8000a16:	460e      	mov	r6, r1
 8000a18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a1c:	2900      	cmp	r1, #0
 8000a1e:	b096      	sub	sp, #88	; 0x58
 8000a20:	4614      	mov	r4, r2
 8000a22:	461d      	mov	r5, r3
 8000a24:	da07      	bge.n	8000a36 <__swhatbuf_r+0x22>
 8000a26:	2300      	movs	r3, #0
 8000a28:	602b      	str	r3, [r5, #0]
 8000a2a:	89b3      	ldrh	r3, [r6, #12]
 8000a2c:	061a      	lsls	r2, r3, #24
 8000a2e:	d410      	bmi.n	8000a52 <__swhatbuf_r+0x3e>
 8000a30:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000a34:	e00e      	b.n	8000a54 <__swhatbuf_r+0x40>
 8000a36:	466a      	mov	r2, sp
 8000a38:	f000 f96e 	bl	8000d18 <_fstat_r>
 8000a3c:	2800      	cmp	r0, #0
 8000a3e:	dbf2      	blt.n	8000a26 <__swhatbuf_r+0x12>
 8000a40:	9a01      	ldr	r2, [sp, #4]
 8000a42:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000a46:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000a4a:	425a      	negs	r2, r3
 8000a4c:	415a      	adcs	r2, r3
 8000a4e:	602a      	str	r2, [r5, #0]
 8000a50:	e7ee      	b.n	8000a30 <__swhatbuf_r+0x1c>
 8000a52:	2340      	movs	r3, #64	; 0x40
 8000a54:	2000      	movs	r0, #0
 8000a56:	6023      	str	r3, [r4, #0]
 8000a58:	b016      	add	sp, #88	; 0x58
 8000a5a:	bd70      	pop	{r4, r5, r6, pc}

08000a5c <__smakebuf_r>:
 8000a5c:	898b      	ldrh	r3, [r1, #12]
 8000a5e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000a60:	079d      	lsls	r5, r3, #30
 8000a62:	4606      	mov	r6, r0
 8000a64:	460c      	mov	r4, r1
 8000a66:	d507      	bpl.n	8000a78 <__smakebuf_r+0x1c>
 8000a68:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000a6c:	6023      	str	r3, [r4, #0]
 8000a6e:	6123      	str	r3, [r4, #16]
 8000a70:	2301      	movs	r3, #1
 8000a72:	6163      	str	r3, [r4, #20]
 8000a74:	b002      	add	sp, #8
 8000a76:	bd70      	pop	{r4, r5, r6, pc}
 8000a78:	ab01      	add	r3, sp, #4
 8000a7a:	466a      	mov	r2, sp
 8000a7c:	f7ff ffca 	bl	8000a14 <__swhatbuf_r>
 8000a80:	9900      	ldr	r1, [sp, #0]
 8000a82:	4605      	mov	r5, r0
 8000a84:	4630      	mov	r0, r6
 8000a86:	f000 f877 	bl	8000b78 <_malloc_r>
 8000a8a:	b948      	cbnz	r0, 8000aa0 <__smakebuf_r+0x44>
 8000a8c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a90:	059a      	lsls	r2, r3, #22
 8000a92:	d4ef      	bmi.n	8000a74 <__smakebuf_r+0x18>
 8000a94:	f023 0303 	bic.w	r3, r3, #3
 8000a98:	f043 0302 	orr.w	r3, r3, #2
 8000a9c:	81a3      	strh	r3, [r4, #12]
 8000a9e:	e7e3      	b.n	8000a68 <__smakebuf_r+0xc>
 8000aa0:	4b0d      	ldr	r3, [pc, #52]	; (8000ad8 <__smakebuf_r+0x7c>)
 8000aa2:	62b3      	str	r3, [r6, #40]	; 0x28
 8000aa4:	89a3      	ldrh	r3, [r4, #12]
 8000aa6:	6020      	str	r0, [r4, #0]
 8000aa8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000aac:	81a3      	strh	r3, [r4, #12]
 8000aae:	9b00      	ldr	r3, [sp, #0]
 8000ab0:	6163      	str	r3, [r4, #20]
 8000ab2:	9b01      	ldr	r3, [sp, #4]
 8000ab4:	6120      	str	r0, [r4, #16]
 8000ab6:	b15b      	cbz	r3, 8000ad0 <__smakebuf_r+0x74>
 8000ab8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000abc:	4630      	mov	r0, r6
 8000abe:	f000 f93d 	bl	8000d3c <_isatty_r>
 8000ac2:	b128      	cbz	r0, 8000ad0 <__smakebuf_r+0x74>
 8000ac4:	89a3      	ldrh	r3, [r4, #12]
 8000ac6:	f023 0303 	bic.w	r3, r3, #3
 8000aca:	f043 0301 	orr.w	r3, r3, #1
 8000ace:	81a3      	strh	r3, [r4, #12]
 8000ad0:	89a3      	ldrh	r3, [r4, #12]
 8000ad2:	431d      	orrs	r5, r3
 8000ad4:	81a5      	strh	r5, [r4, #12]
 8000ad6:	e7cd      	b.n	8000a74 <__smakebuf_r+0x18>
 8000ad8:	080008c9 	.word	0x080008c9

08000adc <_free_r>:
 8000adc:	b538      	push	{r3, r4, r5, lr}
 8000ade:	4605      	mov	r5, r0
 8000ae0:	2900      	cmp	r1, #0
 8000ae2:	d045      	beq.n	8000b70 <_free_r+0x94>
 8000ae4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000ae8:	1f0c      	subs	r4, r1, #4
 8000aea:	2b00      	cmp	r3, #0
 8000aec:	bfb8      	it	lt
 8000aee:	18e4      	addlt	r4, r4, r3
 8000af0:	f000 f946 	bl	8000d80 <__malloc_lock>
 8000af4:	4a1f      	ldr	r2, [pc, #124]	; (8000b74 <_free_r+0x98>)
 8000af6:	6813      	ldr	r3, [r2, #0]
 8000af8:	4610      	mov	r0, r2
 8000afa:	b933      	cbnz	r3, 8000b0a <_free_r+0x2e>
 8000afc:	6063      	str	r3, [r4, #4]
 8000afe:	6014      	str	r4, [r2, #0]
 8000b00:	4628      	mov	r0, r5
 8000b02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b06:	f000 b93c 	b.w	8000d82 <__malloc_unlock>
 8000b0a:	42a3      	cmp	r3, r4
 8000b0c:	d90c      	bls.n	8000b28 <_free_r+0x4c>
 8000b0e:	6821      	ldr	r1, [r4, #0]
 8000b10:	1862      	adds	r2, r4, r1
 8000b12:	4293      	cmp	r3, r2
 8000b14:	bf04      	itt	eq
 8000b16:	681a      	ldreq	r2, [r3, #0]
 8000b18:	685b      	ldreq	r3, [r3, #4]
 8000b1a:	6063      	str	r3, [r4, #4]
 8000b1c:	bf04      	itt	eq
 8000b1e:	1852      	addeq	r2, r2, r1
 8000b20:	6022      	streq	r2, [r4, #0]
 8000b22:	6004      	str	r4, [r0, #0]
 8000b24:	e7ec      	b.n	8000b00 <_free_r+0x24>
 8000b26:	4613      	mov	r3, r2
 8000b28:	685a      	ldr	r2, [r3, #4]
 8000b2a:	b10a      	cbz	r2, 8000b30 <_free_r+0x54>
 8000b2c:	42a2      	cmp	r2, r4
 8000b2e:	d9fa      	bls.n	8000b26 <_free_r+0x4a>
 8000b30:	6819      	ldr	r1, [r3, #0]
 8000b32:	1858      	adds	r0, r3, r1
 8000b34:	42a0      	cmp	r0, r4
 8000b36:	d10b      	bne.n	8000b50 <_free_r+0x74>
 8000b38:	6820      	ldr	r0, [r4, #0]
 8000b3a:	4401      	add	r1, r0
 8000b3c:	1858      	adds	r0, r3, r1
 8000b3e:	4282      	cmp	r2, r0
 8000b40:	6019      	str	r1, [r3, #0]
 8000b42:	d1dd      	bne.n	8000b00 <_free_r+0x24>
 8000b44:	6810      	ldr	r0, [r2, #0]
 8000b46:	6852      	ldr	r2, [r2, #4]
 8000b48:	605a      	str	r2, [r3, #4]
 8000b4a:	4401      	add	r1, r0
 8000b4c:	6019      	str	r1, [r3, #0]
 8000b4e:	e7d7      	b.n	8000b00 <_free_r+0x24>
 8000b50:	d902      	bls.n	8000b58 <_free_r+0x7c>
 8000b52:	230c      	movs	r3, #12
 8000b54:	602b      	str	r3, [r5, #0]
 8000b56:	e7d3      	b.n	8000b00 <_free_r+0x24>
 8000b58:	6820      	ldr	r0, [r4, #0]
 8000b5a:	1821      	adds	r1, r4, r0
 8000b5c:	428a      	cmp	r2, r1
 8000b5e:	bf04      	itt	eq
 8000b60:	6811      	ldreq	r1, [r2, #0]
 8000b62:	6852      	ldreq	r2, [r2, #4]
 8000b64:	6062      	str	r2, [r4, #4]
 8000b66:	bf04      	itt	eq
 8000b68:	1809      	addeq	r1, r1, r0
 8000b6a:	6021      	streq	r1, [r4, #0]
 8000b6c:	605c      	str	r4, [r3, #4]
 8000b6e:	e7c7      	b.n	8000b00 <_free_r+0x24>
 8000b70:	bd38      	pop	{r3, r4, r5, pc}
 8000b72:	bf00      	nop
 8000b74:	20000090 	.word	0x20000090

08000b78 <_malloc_r>:
 8000b78:	b570      	push	{r4, r5, r6, lr}
 8000b7a:	1ccd      	adds	r5, r1, #3
 8000b7c:	f025 0503 	bic.w	r5, r5, #3
 8000b80:	3508      	adds	r5, #8
 8000b82:	2d0c      	cmp	r5, #12
 8000b84:	bf38      	it	cc
 8000b86:	250c      	movcc	r5, #12
 8000b88:	2d00      	cmp	r5, #0
 8000b8a:	4606      	mov	r6, r0
 8000b8c:	db01      	blt.n	8000b92 <_malloc_r+0x1a>
 8000b8e:	42a9      	cmp	r1, r5
 8000b90:	d903      	bls.n	8000b9a <_malloc_r+0x22>
 8000b92:	230c      	movs	r3, #12
 8000b94:	6033      	str	r3, [r6, #0]
 8000b96:	2000      	movs	r0, #0
 8000b98:	bd70      	pop	{r4, r5, r6, pc}
 8000b9a:	f000 f8f1 	bl	8000d80 <__malloc_lock>
 8000b9e:	4a21      	ldr	r2, [pc, #132]	; (8000c24 <_malloc_r+0xac>)
 8000ba0:	6814      	ldr	r4, [r2, #0]
 8000ba2:	4621      	mov	r1, r4
 8000ba4:	b991      	cbnz	r1, 8000bcc <_malloc_r+0x54>
 8000ba6:	4c20      	ldr	r4, [pc, #128]	; (8000c28 <_malloc_r+0xb0>)
 8000ba8:	6823      	ldr	r3, [r4, #0]
 8000baa:	b91b      	cbnz	r3, 8000bb4 <_malloc_r+0x3c>
 8000bac:	4630      	mov	r0, r6
 8000bae:	f000 f83d 	bl	8000c2c <_sbrk_r>
 8000bb2:	6020      	str	r0, [r4, #0]
 8000bb4:	4629      	mov	r1, r5
 8000bb6:	4630      	mov	r0, r6
 8000bb8:	f000 f838 	bl	8000c2c <_sbrk_r>
 8000bbc:	1c43      	adds	r3, r0, #1
 8000bbe:	d124      	bne.n	8000c0a <_malloc_r+0x92>
 8000bc0:	230c      	movs	r3, #12
 8000bc2:	6033      	str	r3, [r6, #0]
 8000bc4:	4630      	mov	r0, r6
 8000bc6:	f000 f8dc 	bl	8000d82 <__malloc_unlock>
 8000bca:	e7e4      	b.n	8000b96 <_malloc_r+0x1e>
 8000bcc:	680b      	ldr	r3, [r1, #0]
 8000bce:	1b5b      	subs	r3, r3, r5
 8000bd0:	d418      	bmi.n	8000c04 <_malloc_r+0x8c>
 8000bd2:	2b0b      	cmp	r3, #11
 8000bd4:	d90f      	bls.n	8000bf6 <_malloc_r+0x7e>
 8000bd6:	600b      	str	r3, [r1, #0]
 8000bd8:	50cd      	str	r5, [r1, r3]
 8000bda:	18cc      	adds	r4, r1, r3
 8000bdc:	4630      	mov	r0, r6
 8000bde:	f000 f8d0 	bl	8000d82 <__malloc_unlock>
 8000be2:	f104 000b 	add.w	r0, r4, #11
 8000be6:	1d23      	adds	r3, r4, #4
 8000be8:	f020 0007 	bic.w	r0, r0, #7
 8000bec:	1ac3      	subs	r3, r0, r3
 8000bee:	d0d3      	beq.n	8000b98 <_malloc_r+0x20>
 8000bf0:	425a      	negs	r2, r3
 8000bf2:	50e2      	str	r2, [r4, r3]
 8000bf4:	e7d0      	b.n	8000b98 <_malloc_r+0x20>
 8000bf6:	428c      	cmp	r4, r1
 8000bf8:	684b      	ldr	r3, [r1, #4]
 8000bfa:	bf16      	itet	ne
 8000bfc:	6063      	strne	r3, [r4, #4]
 8000bfe:	6013      	streq	r3, [r2, #0]
 8000c00:	460c      	movne	r4, r1
 8000c02:	e7eb      	b.n	8000bdc <_malloc_r+0x64>
 8000c04:	460c      	mov	r4, r1
 8000c06:	6849      	ldr	r1, [r1, #4]
 8000c08:	e7cc      	b.n	8000ba4 <_malloc_r+0x2c>
 8000c0a:	1cc4      	adds	r4, r0, #3
 8000c0c:	f024 0403 	bic.w	r4, r4, #3
 8000c10:	42a0      	cmp	r0, r4
 8000c12:	d005      	beq.n	8000c20 <_malloc_r+0xa8>
 8000c14:	1a21      	subs	r1, r4, r0
 8000c16:	4630      	mov	r0, r6
 8000c18:	f000 f808 	bl	8000c2c <_sbrk_r>
 8000c1c:	3001      	adds	r0, #1
 8000c1e:	d0cf      	beq.n	8000bc0 <_malloc_r+0x48>
 8000c20:	6025      	str	r5, [r4, #0]
 8000c22:	e7db      	b.n	8000bdc <_malloc_r+0x64>
 8000c24:	20000090 	.word	0x20000090
 8000c28:	20000094 	.word	0x20000094

08000c2c <_sbrk_r>:
 8000c2c:	b538      	push	{r3, r4, r5, lr}
 8000c2e:	4c06      	ldr	r4, [pc, #24]	; (8000c48 <_sbrk_r+0x1c>)
 8000c30:	2300      	movs	r3, #0
 8000c32:	4605      	mov	r5, r0
 8000c34:	4608      	mov	r0, r1
 8000c36:	6023      	str	r3, [r4, #0]
 8000c38:	f7ff fbc6 	bl	80003c8 <_sbrk>
 8000c3c:	1c43      	adds	r3, r0, #1
 8000c3e:	d102      	bne.n	8000c46 <_sbrk_r+0x1a>
 8000c40:	6823      	ldr	r3, [r4, #0]
 8000c42:	b103      	cbz	r3, 8000c46 <_sbrk_r+0x1a>
 8000c44:	602b      	str	r3, [r5, #0]
 8000c46:	bd38      	pop	{r3, r4, r5, pc}
 8000c48:	20000098 	.word	0x20000098

08000c4c <__sread>:
 8000c4c:	b510      	push	{r4, lr}
 8000c4e:	460c      	mov	r4, r1
 8000c50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c54:	f000 f896 	bl	8000d84 <_read_r>
 8000c58:	2800      	cmp	r0, #0
 8000c5a:	bfab      	itete	ge
 8000c5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000c5e:	89a3      	ldrhlt	r3, [r4, #12]
 8000c60:	181b      	addge	r3, r3, r0
 8000c62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000c66:	bfac      	ite	ge
 8000c68:	6563      	strge	r3, [r4, #84]	; 0x54
 8000c6a:	81a3      	strhlt	r3, [r4, #12]
 8000c6c:	bd10      	pop	{r4, pc}

08000c6e <__swrite>:
 8000c6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c72:	461f      	mov	r7, r3
 8000c74:	898b      	ldrh	r3, [r1, #12]
 8000c76:	05db      	lsls	r3, r3, #23
 8000c78:	4605      	mov	r5, r0
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	4616      	mov	r6, r2
 8000c7e:	d505      	bpl.n	8000c8c <__swrite+0x1e>
 8000c80:	2302      	movs	r3, #2
 8000c82:	2200      	movs	r2, #0
 8000c84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000c88:	f000 f868 	bl	8000d5c <_lseek_r>
 8000c8c:	89a3      	ldrh	r3, [r4, #12]
 8000c8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c92:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000c96:	81a3      	strh	r3, [r4, #12]
 8000c98:	4632      	mov	r2, r6
 8000c9a:	463b      	mov	r3, r7
 8000c9c:	4628      	mov	r0, r5
 8000c9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ca2:	f000 b817 	b.w	8000cd4 <_write_r>

08000ca6 <__sseek>:
 8000ca6:	b510      	push	{r4, lr}
 8000ca8:	460c      	mov	r4, r1
 8000caa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cae:	f000 f855 	bl	8000d5c <_lseek_r>
 8000cb2:	1c43      	adds	r3, r0, #1
 8000cb4:	89a3      	ldrh	r3, [r4, #12]
 8000cb6:	bf15      	itete	ne
 8000cb8:	6560      	strne	r0, [r4, #84]	; 0x54
 8000cba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000cbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000cc2:	81a3      	strheq	r3, [r4, #12]
 8000cc4:	bf18      	it	ne
 8000cc6:	81a3      	strhne	r3, [r4, #12]
 8000cc8:	bd10      	pop	{r4, pc}

08000cca <__sclose>:
 8000cca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000cce:	f000 b813 	b.w	8000cf8 <_close_r>
	...

08000cd4 <_write_r>:
 8000cd4:	b538      	push	{r3, r4, r5, lr}
 8000cd6:	4c07      	ldr	r4, [pc, #28]	; (8000cf4 <_write_r+0x20>)
 8000cd8:	4605      	mov	r5, r0
 8000cda:	4608      	mov	r0, r1
 8000cdc:	4611      	mov	r1, r2
 8000cde:	2200      	movs	r2, #0
 8000ce0:	6022      	str	r2, [r4, #0]
 8000ce2:	461a      	mov	r2, r3
 8000ce4:	f7ff fb1f 	bl	8000326 <_write>
 8000ce8:	1c43      	adds	r3, r0, #1
 8000cea:	d102      	bne.n	8000cf2 <_write_r+0x1e>
 8000cec:	6823      	ldr	r3, [r4, #0]
 8000cee:	b103      	cbz	r3, 8000cf2 <_write_r+0x1e>
 8000cf0:	602b      	str	r3, [r5, #0]
 8000cf2:	bd38      	pop	{r3, r4, r5, pc}
 8000cf4:	20000098 	.word	0x20000098

08000cf8 <_close_r>:
 8000cf8:	b538      	push	{r3, r4, r5, lr}
 8000cfa:	4c06      	ldr	r4, [pc, #24]	; (8000d14 <_close_r+0x1c>)
 8000cfc:	2300      	movs	r3, #0
 8000cfe:	4605      	mov	r5, r0
 8000d00:	4608      	mov	r0, r1
 8000d02:	6023      	str	r3, [r4, #0]
 8000d04:	f7ff fb2b 	bl	800035e <_close>
 8000d08:	1c43      	adds	r3, r0, #1
 8000d0a:	d102      	bne.n	8000d12 <_close_r+0x1a>
 8000d0c:	6823      	ldr	r3, [r4, #0]
 8000d0e:	b103      	cbz	r3, 8000d12 <_close_r+0x1a>
 8000d10:	602b      	str	r3, [r5, #0]
 8000d12:	bd38      	pop	{r3, r4, r5, pc}
 8000d14:	20000098 	.word	0x20000098

08000d18 <_fstat_r>:
 8000d18:	b538      	push	{r3, r4, r5, lr}
 8000d1a:	4c07      	ldr	r4, [pc, #28]	; (8000d38 <_fstat_r+0x20>)
 8000d1c:	2300      	movs	r3, #0
 8000d1e:	4605      	mov	r5, r0
 8000d20:	4608      	mov	r0, r1
 8000d22:	4611      	mov	r1, r2
 8000d24:	6023      	str	r3, [r4, #0]
 8000d26:	f7ff fb26 	bl	8000376 <_fstat>
 8000d2a:	1c43      	adds	r3, r0, #1
 8000d2c:	d102      	bne.n	8000d34 <_fstat_r+0x1c>
 8000d2e:	6823      	ldr	r3, [r4, #0]
 8000d30:	b103      	cbz	r3, 8000d34 <_fstat_r+0x1c>
 8000d32:	602b      	str	r3, [r5, #0]
 8000d34:	bd38      	pop	{r3, r4, r5, pc}
 8000d36:	bf00      	nop
 8000d38:	20000098 	.word	0x20000098

08000d3c <_isatty_r>:
 8000d3c:	b538      	push	{r3, r4, r5, lr}
 8000d3e:	4c06      	ldr	r4, [pc, #24]	; (8000d58 <_isatty_r+0x1c>)
 8000d40:	2300      	movs	r3, #0
 8000d42:	4605      	mov	r5, r0
 8000d44:	4608      	mov	r0, r1
 8000d46:	6023      	str	r3, [r4, #0]
 8000d48:	f7ff fb25 	bl	8000396 <_isatty>
 8000d4c:	1c43      	adds	r3, r0, #1
 8000d4e:	d102      	bne.n	8000d56 <_isatty_r+0x1a>
 8000d50:	6823      	ldr	r3, [r4, #0]
 8000d52:	b103      	cbz	r3, 8000d56 <_isatty_r+0x1a>
 8000d54:	602b      	str	r3, [r5, #0]
 8000d56:	bd38      	pop	{r3, r4, r5, pc}
 8000d58:	20000098 	.word	0x20000098

08000d5c <_lseek_r>:
 8000d5c:	b538      	push	{r3, r4, r5, lr}
 8000d5e:	4c07      	ldr	r4, [pc, #28]	; (8000d7c <_lseek_r+0x20>)
 8000d60:	4605      	mov	r5, r0
 8000d62:	4608      	mov	r0, r1
 8000d64:	4611      	mov	r1, r2
 8000d66:	2200      	movs	r2, #0
 8000d68:	6022      	str	r2, [r4, #0]
 8000d6a:	461a      	mov	r2, r3
 8000d6c:	f7ff fb1e 	bl	80003ac <_lseek>
 8000d70:	1c43      	adds	r3, r0, #1
 8000d72:	d102      	bne.n	8000d7a <_lseek_r+0x1e>
 8000d74:	6823      	ldr	r3, [r4, #0]
 8000d76:	b103      	cbz	r3, 8000d7a <_lseek_r+0x1e>
 8000d78:	602b      	str	r3, [r5, #0]
 8000d7a:	bd38      	pop	{r3, r4, r5, pc}
 8000d7c:	20000098 	.word	0x20000098

08000d80 <__malloc_lock>:
 8000d80:	4770      	bx	lr

08000d82 <__malloc_unlock>:
 8000d82:	4770      	bx	lr

08000d84 <_read_r>:
 8000d84:	b538      	push	{r3, r4, r5, lr}
 8000d86:	4c07      	ldr	r4, [pc, #28]	; (8000da4 <_read_r+0x20>)
 8000d88:	4605      	mov	r5, r0
 8000d8a:	4608      	mov	r0, r1
 8000d8c:	4611      	mov	r1, r2
 8000d8e:	2200      	movs	r2, #0
 8000d90:	6022      	str	r2, [r4, #0]
 8000d92:	461a      	mov	r2, r3
 8000d94:	f7ff faaa 	bl	80002ec <_read>
 8000d98:	1c43      	adds	r3, r0, #1
 8000d9a:	d102      	bne.n	8000da2 <_read_r+0x1e>
 8000d9c:	6823      	ldr	r3, [r4, #0]
 8000d9e:	b103      	cbz	r3, 8000da2 <_read_r+0x1e>
 8000da0:	602b      	str	r3, [r5, #0]
 8000da2:	bd38      	pop	{r3, r4, r5, pc}
 8000da4:	20000098 	.word	0x20000098

08000da8 <_init>:
 8000da8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000daa:	bf00      	nop
 8000dac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dae:	bc08      	pop	{r3}
 8000db0:	469e      	mov	lr, r3
 8000db2:	4770      	bx	lr

08000db4 <_fini>:
 8000db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000db6:	bf00      	nop
 8000db8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000dba:	bc08      	pop	{r3}
 8000dbc:	469e      	mov	lr, r3
 8000dbe:	4770      	bx	lr
