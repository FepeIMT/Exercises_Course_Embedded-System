/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

/*
 * Write a program to execute an SVC instruction from thread mode,
 * implement the SVC handler to print the SVC number used.
 * Also, increment the SVC number by 4 and return it to the thread mode code and print it.
 * Hints:
 * 1) Write a main() function where you should execute the SVC instruction with an argument. Let's say SVC #
 * 2) Implement the SVC handler
 * 3) In the SVC handler extract the SVC number and print it using printf
 * 4) Increment the SVC number by 4 and return it to the thread mode
 */
#include <stdint.h>
#include <stdio.h>

int SVC_Status = 0;


int main(void)
{

	__asm("SVC #25");

	register uint32_t data __asm("r0");


	for(;;);
}


__attribute__ ((naked)) void SVC_Handler(void)
{
	//1. Get the value of the MSP
	__asm("MRS R0, MSP");
	__asm("B SVC_Handler_c");
}

void SVC_Handler_c(uint32_t *pBaseOfStackFrame)
{
	SVC_Status = 1;

	uint8_t *pReturn_addr = (uint8_t*)pBaseOfStackFrame[6];

	//2. Decrement the return address by 2 to point to
	//opcode of the SVC instruction in the program memory
	pReturn_addr -= 2;

	//3. Extract the SVC number (LSByte of the opcode
	uint8_t svc_number = *pReturn_addr;

	svc_number += 4;

	pBaseOfStackFrame[0] = svc_number;

}

